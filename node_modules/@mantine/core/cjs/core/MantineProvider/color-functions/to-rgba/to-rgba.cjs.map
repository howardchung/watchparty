{"version":3,"file":"to-rgba.cjs","sources":["../../../../../src/core/MantineProvider/color-functions/to-rgba/to-rgba.ts"],"sourcesContent":["export interface RGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nfunction isHexColor(hex: string): boolean {\n  const HEX_REGEXP = /^#?([0-9A-F]{3}){1,2}([0-9A-F]{2})?$/i;\n\n  return HEX_REGEXP.test(hex);\n}\n\nfunction hexToRgba(color: string): RGBA {\n  let hexString = color.replace('#', '');\n\n  if (hexString.length === 3) {\n    const shorthandHex = hexString.split('');\n    hexString = [\n      shorthandHex[0],\n      shorthandHex[0],\n      shorthandHex[1],\n      shorthandHex[1],\n      shorthandHex[2],\n      shorthandHex[2],\n    ].join('');\n  }\n\n  if (hexString.length === 8) {\n    const alpha = parseInt(hexString.slice(6, 8), 16) / 255;\n\n    return {\n      r: parseInt(hexString.slice(0, 2), 16),\n      g: parseInt(hexString.slice(2, 4), 16),\n      b: parseInt(hexString.slice(4, 6), 16),\n      a: alpha,\n    };\n  }\n\n  const parsed = parseInt(hexString, 16);\n  const r = (parsed >> 16) & 255;\n  const g = (parsed >> 8) & 255;\n  const b = parsed & 255;\n\n  return {\n    r,\n    g,\n    b,\n    a: 1,\n  };\n}\n\nfunction rgbStringToRgba(color: string): RGBA {\n  const [r, g, b, a] = color\n    .replace(/[^0-9,./]/g, '')\n    .split(/[/,]/)\n    .map(Number);\n\n  return { r, g, b, a: a === undefined ? 1 : a };\n}\n\nfunction hslStringToRgba(hslaString: string): RGBA {\n  const hslaRegex =\n    /^hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*(,\\s*(0?\\.\\d+|\\d+(\\.\\d+)?))?\\s*\\)$/i;\n\n  const matches = hslaString.match(hslaRegex);\n  if (!matches) {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n    };\n  }\n\n  const h = parseInt(matches[1], 10);\n  const s = parseInt(matches[2], 10) / 100;\n  const l = parseInt(matches[3], 10) / 100;\n  const a = matches[5] ? parseFloat(matches[5]) : undefined;\n\n  const chroma = (1 - Math.abs(2 * l - 1)) * s;\n  const huePrime = h / 60;\n  const x = chroma * (1 - Math.abs((huePrime % 2) - 1));\n  const m = l - chroma / 2;\n\n  let r: number;\n  let g: number;\n  let b: number;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    r = chroma;\n    g = x;\n    b = 0;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    r = x;\n    g = chroma;\n    b = 0;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    r = 0;\n    g = chroma;\n    b = x;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    r = 0;\n    g = x;\n    b = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    r = x;\n    g = 0;\n    b = chroma;\n  } else {\n    r = chroma;\n    g = 0;\n    b = x;\n  }\n\n  return {\n    r: Math.round((r + m) * 255),\n    g: Math.round((g + m) * 255),\n    b: Math.round((b + m) * 255),\n    a: a || 1,\n  };\n}\n\nexport function toRgba(color: string): RGBA {\n  if (isHexColor(color)) {\n    return hexToRgba(color);\n  }\n\n  if (color.startsWith('rgb')) {\n    return rgbStringToRgba(color);\n  }\n\n  if (color.startsWith('hsl')) {\n    return hslStringToRgba(color);\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  };\n}\n"],"names":[],"mappings":";;AAOA,SAAS,WAAW,GAAA,EAAsB;AACxC,EAAA,MAAM,UAAA,GAAa,uCAAA;AAEnB,EAAA,OAAO,UAAA,CAAW,KAAK,GAAG,CAAA;AAC5B;AAEA,SAAS,UAAU,KAAA,EAAqB;AACtC,EAAA,IAAI,SAAA,GAAY,KAAA,CAAM,OAAA,CAAQ,GAAA,EAAK,EAAE,CAAA;AAErC,EAAA,IAAI,SAAA,CAAU,WAAW,CAAA,EAAG;AAC1B,IAAA,MAAM,YAAA,GAAe,SAAA,CAAU,KAAA,CAAM,EAAE,CAAA;AACvC,IAAA,SAAA,GAAY;AAAA,MACV,aAAa,CAAC,CAAA;AAAA,MACd,aAAa,CAAC,CAAA;AAAA,MACd,aAAa,CAAC,CAAA;AAAA,MACd,aAAa,CAAC,CAAA;AAAA,MACd,aAAa,CAAC,CAAA;AAAA,MACd,aAAa,CAAC;AAAA,KAChB,CAAE,KAAK,EAAE,CAAA;AAAA,EACX;AAEA,EAAA,IAAI,SAAA,CAAU,WAAW,CAAA,EAAG;AAC1B,IAAA,MAAM,KAAA,GAAQ,SAAS,SAAA,CAAU,KAAA,CAAM,GAAG,CAAC,CAAA,EAAG,EAAE,CAAA,GAAI,GAAA;AAEpD,IAAA,OAAO;AAAA,MACL,GAAG,QAAA,CAAS,SAAA,CAAU,MAAM,CAAA,EAAG,CAAC,GAAG,EAAE,CAAA;AAAA,MACrC,GAAG,QAAA,CAAS,SAAA,CAAU,MAAM,CAAA,EAAG,CAAC,GAAG,EAAE,CAAA;AAAA,MACrC,GAAG,QAAA,CAAS,SAAA,CAAU,MAAM,CAAA,EAAG,CAAC,GAAG,EAAE,CAAA;AAAA,MACrC,CAAA,EAAG;AAAA,KACL;AAAA,EACF;AAEA,EAAA,MAAM,MAAA,GAAS,QAAA,CAAS,SAAA,EAAW,EAAE,CAAA;AACrC,EAAA,MAAM,CAAA,GAAK,UAAU,EAAA,GAAM,GAAA;AAC3B,EAAA,MAAM,CAAA,GAAK,UAAU,CAAA,GAAK,GAAA;AAC1B,EAAA,MAAM,IAAI,MAAA,GAAS,GAAA;AAEnB,EAAA,OAAO;AAAA,IACL,CAAA;AAAA,IACA,CAAA;AAAA,IACA,CAAA;AAAA,IACA,CAAA,EAAG;AAAA,GACL;AACF;AAEA,SAAS,gBAAgB,KAAA,EAAqB;AAC5C,EAAA,MAAM,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAC,CAAA,GAAI,KAAA,CAClB,OAAA,CAAQ,YAAA,EAAc,EAAE,CAAA,CACxB,KAAA,CAAM,MAAM,CAAA,CACZ,IAAI,MAAM,CAAA;AAEb,EAAA,OAAO,EAAE,GAAG,CAAA,EAAG,CAAA,EAAG,GAAG,CAAA,KAAM,MAAA,GAAY,IAAI,CAAA,EAAE;AAC/C;AAEA,SAAS,gBAAgB,UAAA,EAA0B;AACjD,EAAA,MAAM,SAAA,GACJ,kFAAA;AAEF,EAAA,MAAM,OAAA,GAAU,UAAA,CAAW,KAAA,CAAM,SAAS,CAAA;AAC1C,EAAA,IAAI,CAAC,OAAA,EAAS;AACZ,IAAA,OAAO;AAAA,MACL,CAAA,EAAG,CAAA;AAAA,MACH,CAAA,EAAG,CAAA;AAAA,MACH,CAAA,EAAG,CAAA;AAAA,MACH,CAAA,EAAG;AAAA,KACL;AAAA,EACF;AAEA,EAAA,MAAM,CAAA,GAAI,QAAA,CAAS,OAAA,CAAQ,CAAC,GAAG,EAAE,CAAA;AACjC,EAAA,MAAM,IAAI,QAAA,CAAS,OAAA,CAAQ,CAAC,CAAA,EAAG,EAAE,CAAA,GAAI,GAAA;AACrC,EAAA,MAAM,IAAI,QAAA,CAAS,OAAA,CAAQ,CAAC,CAAA,EAAG,EAAE,CAAA,GAAI,GAAA;AACrC,EAAA,MAAM,CAAA,GAAI,QAAQ,CAAC,CAAA,GAAI,WAAW,OAAA,CAAQ,CAAC,CAAC,CAAA,GAAI,MAAA;AAEhD,EAAA,MAAM,UAAU,CAAA,GAAI,IAAA,CAAK,IAAI,CAAA,GAAI,CAAA,GAAI,CAAC,CAAA,IAAK,CAAA;AAC3C,EAAA,MAAM,WAAW,CAAA,GAAI,EAAA;AACrB,EAAA,MAAM,IAAI,MAAA,IAAU,CAAA,GAAI,KAAK,GAAA,CAAK,QAAA,GAAW,IAAK,CAAC,CAAA,CAAA;AACnD,EAAA,MAAM,CAAA,GAAI,IAAI,MAAA,GAAS,CAAA;AAEvB,EAAA,IAAI,CAAA;AACJ,EAAA,IAAI,CAAA;AACJ,EAAA,IAAI,CAAA;AAEJ,EAAA,IAAI,QAAA,IAAY,CAAA,IAAK,QAAA,GAAW,CAAA,EAAG;AACjC,IAAA,CAAA,GAAI,MAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AAAA,EACN,CAAA,MAAA,IAAW,QAAA,IAAY,CAAA,IAAK,QAAA,GAAW,CAAA,EAAG;AACxC,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,MAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AAAA,EACN,CAAA,MAAA,IAAW,QAAA,IAAY,CAAA,IAAK,QAAA,GAAW,CAAA,EAAG;AACxC,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,MAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AAAA,EACN,CAAA,MAAA,IAAW,QAAA,IAAY,CAAA,IAAK,QAAA,GAAW,CAAA,EAAG;AACxC,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,MAAA;AAAA,EACN,CAAA,MAAA,IAAW,QAAA,IAAY,CAAA,IAAK,QAAA,GAAW,CAAA,EAAG;AACxC,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,MAAA;AAAA,EACN,CAAA,MAAO;AACL,IAAA,CAAA,GAAI,MAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AACJ,IAAA,CAAA,GAAI,CAAA;AAAA,EACN;AAEA,EAAA,OAAO;AAAA,IACL,CAAA,EAAG,IAAA,CAAK,KAAA,CAAA,CAAO,CAAA,GAAI,KAAK,GAAG,CAAA;AAAA,IAC3B,CAAA,EAAG,IAAA,CAAK,KAAA,CAAA,CAAO,CAAA,GAAI,KAAK,GAAG,CAAA;AAAA,IAC3B,CAAA,EAAG,IAAA,CAAK,KAAA,CAAA,CAAO,CAAA,GAAI,KAAK,GAAG,CAAA;AAAA,IAC3B,GAAG,CAAA,IAAK;AAAA,GACV;AACF;AAEO,SAAS,OAAO,KAAA,EAAqB;AAC1C,EAAA,IAAI,UAAA,CAAW,KAAK,CAAA,EAAG;AACrB,IAAA,OAAO,UAAU,KAAK,CAAA;AAAA,EACxB;AAEA,EAAA,IAAI,KAAA,CAAM,UAAA,CAAW,KAAK,CAAA,EAAG;AAC3B,IAAA,OAAO,gBAAgB,KAAK,CAAA;AAAA,EAC9B;AAEA,EAAA,IAAI,KAAA,CAAM,UAAA,CAAW,KAAK,CAAA,EAAG;AAC3B,IAAA,OAAO,gBAAgB,KAAK,CAAA;AAAA,EAC9B;AAEA,EAAA,OAAO;AAAA,IACL,CAAA,EAAG,CAAA;AAAA,IACH,CAAA,EAAG,CAAA;AAAA,IACH,CAAA,EAAG,CAAA;AAAA,IACH,CAAA,EAAG;AAAA,GACL;AACF;;;;"}