{"version":3,"file":"parsePSSHList.js","sourceRoot":"","sources":["../../../src/drm/cenc/parsePSSHList.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Parses a list of PSSH boxes into keysystem-specific PSSH data.\n *\n * @param data - The concatenated list of PSSH boxes as provided by\n * the CDM as initialization data when CommonEncryption content is detected\n * @returns An object that has a property named according to each of\n * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\n * and a ArrayBuffer (the entire PSSH box) as the property value\n *\n * @group DRM\n * @beta\n * \n * @example \n * {@includeCode ../../../test/drm/cenc/parsePSSHList.test.ts#example}\n */\nexport function parsePSSHList(data: ArrayBuffer | null | undefined): Record<string, ArrayBuffer> {\n\tif (data === null || data === undefined) {\n\t\treturn {};\n\t}\n\t// data.buffer first for Uint8Array support\n\tconst dv = new DataView(data instanceof ArrayBuffer ? data : (data as Uint8Array).buffer); \n\tconst pssh: Record<string, ArrayBuffer> = {};\n\tlet byteCursor = 0;\n  \n\twhile (true) {\n\t\tif (byteCursor >= dv.byteLength) {\n\t\t\tbreak;\n\t\t}\n  \n\t\tconst boxStart = byteCursor;\n  \n\t\t// Box size\n\t\tconst size = dv.getUint32(byteCursor);\n\t\tconst nextBox = byteCursor + size;\n\t\tbyteCursor += 4;\n  \n\t\t// Verify PSSH   \n\t\tif (dv.getUint32(byteCursor) !== 0x70737368) {\n\t\t\tbyteCursor = nextBox;\n\t\t\tcontinue;\n\t\t}\n\t\tbyteCursor += 4;\n  \n\t\t// Version must be 0 or 1\n\t\tconst version = dv.getUint8(byteCursor);\n\t\tif (version !== 0 && version !== 1) {\n\t\t\tbyteCursor = nextBox;\n\t\t\tcontinue;\n\t\t}\n  \n\t\tbyteCursor += 1; // Move past version\n\t\tbyteCursor += 3; // Skip flags \n  \n\t\t// 16-byte UUID/SystemID\n\t\tlet systemID = '';\n\t\tlet val: string;\n  \n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tval = dv.getUint8(byteCursor + i).toString(16);\n\t\t\tsystemID += val.length === 1 ? '0' + val : val;\n\t\t}\n\t\tbyteCursor += 4;\n\t\tsystemID += '-';\n  \n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tval = dv.getUint8(byteCursor + i).toString(16);\n\t\t\tsystemID += val.length === 1 ? '0' + val : val;\n\t\t}\n\t\tbyteCursor += 2;\n\t\tsystemID += '-';\n  \n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tval = dv.getUint8(byteCursor + i).toString(16);\n\t\t\tsystemID += val.length === 1 ? '0' + val : val;\n\t\t}\n\t\tbyteCursor += 2;\n\t\tsystemID += '-';\n  \n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tval = dv.getUint8(byteCursor + i).toString(16);\n\t\t\tsystemID += val.length === 1 ? '0' + val : val;\n\t\t}\n\t\tbyteCursor += 2;\n\t\tsystemID += '-';\n  \n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\tval = dv.getUint8(byteCursor + i).toString(16);\n\t\t\tsystemID += val.length === 1 ? '0' + val : val;\n\t\t}\n\t\tbyteCursor += 6;\n  \n\t\tsystemID = systemID.toLowerCase();\n  \n\t\t// PSSH Data Size \n\t\tbyteCursor += 4;\n  \n\t\t// PSSH boxdata\n\t\tpssh[systemID] = data.slice(boxStart, nextBox);\n  \n\t\tbyteCursor = nextBox;\n\t}\n  \n\treturn pssh;\n}\n  \n"]}