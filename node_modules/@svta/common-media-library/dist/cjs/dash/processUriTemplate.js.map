{"version":3,"file":"processUriTemplate.js","sourceRoot":"","sources":["../../../src/dash/processUriTemplate.ts"],"names":[],"mappings":";;AAoBA,gDA+EC;AAnGD,MAAM,MAAM,GAAG,mFAAmF,CAAC;AAEnG;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,kBAAkB,CACjC,WAAmB,EACnB,gBAA2C,EAC3C,MAAiC,EACjC,SAAoC,EACpC,SAAoC,EACpC,IAAwC;IAExC,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE;QACzE,IAAI,KAAyC,CAAC;QAE9C,QAAQ,IAAI,EAAE,CAAC;YACd,KAAK,SAAS,EAAE,UAAU;gBACzB,OAAO,GAAG,CAAC;YAEZ,KAAK,kBAAkB;gBACtB,KAAK,GAAG,gBAAgB,CAAC;gBACzB,MAAM;YAEP,KAAK,QAAQ;gBACZ,KAAK,GAAG,MAAM,CAAC;gBACf,MAAM;YAEP,KAAK,WAAW;gBACf,KAAK,GAAG,SAAS,CAAC;gBAClB,MAAM;YAEP,KAAK,WAAW;gBACf,KAAK,GAAG,SAAS,CAAC;gBAClB,MAAM;YAEP,KAAK,MAAM;gBACV,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;oBAC9B,OAAO,IAAI,CAAC;gBACb,CAAC;gBAED,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBACvC,MAAM;YAEP;gBACC,KAAK,GAAG,IAAI,CAAC;QACf,CAAC;QAED,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;YACnB,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,WAAmB,CAAC;QAExB,QAAQ,MAAM,EAAE,CAAC;YAChB,KAAK,SAAS,CAAC,CAAE,2CAA2C;YAC5D,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACP,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAC/B,MAAM;YAEP,KAAK,GAAG;gBACP,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM;YAEP,KAAK,GAAG;gBACP,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACjC,MAAM;YAEP,KAAK,GAAG;gBACP,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC/C,MAAM;YAEP;gBACC,WAAW,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBAC/B,MAAM;QACR,CAAC;QAED,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QAC1C,OAAO,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACZ,CAAC","sourcesContent":["const TOKENS = /\\$(RepresentationID|Number|SubNumber|Bandwidth|Time)?(?:%0([0-9]+)([diouxX]))?\\$/g;\n\n/**\n * Process a URI template used in `SegmentTemplate` nodes.\n *\n * @param uriTemplate - URI template to process.\n * @param representationId - Representation ID.\n * @param number - Number.\n * @param subNumber - Sub-number.\n * @param bandwidth - Bandwidth.\n * @param time - Time. Should be passed as a number unless the value is larger than `MAX_SAFE_INTEGER`, then it should be provided as a string. If the value is a string all format tags will be ignored.\n *\n * @returns Processed URI template.\n *\n * @group DASH\n * @beta\n *\n * @example\n * {@includeCode ../../test/dash/processUriTemplate.test.ts#example}\n */\nexport function processUriTemplate(\n\turiTemplate: string,\n\trepresentationId: string | null | undefined,\n\tnumber: number | null | undefined,\n\tsubNumber: number | null | undefined,\n\tbandwidth: number | null | undefined,\n\ttime: string | number | null | undefined,\n): string {\n\tconst uri = uriTemplate.replace(TOKENS, (match, name, widthStr, format) => {\n\t\tlet value: string | number | null | undefined;\n\n\t\tswitch (name) {\n\t\t\tcase undefined: // $$ case\n\t\t\t\treturn '$';\n\n\t\t\tcase 'RepresentationID':\n\t\t\t\tvalue = representationId;\n\t\t\t\tbreak;\n\n\t\t\tcase 'Number':\n\t\t\t\tvalue = number;\n\t\t\t\tbreak;\n\n\t\t\tcase 'SubNumber':\n\t\t\t\tvalue = subNumber;\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bandwidth':\n\t\t\t\tvalue = bandwidth;\n\t\t\t\tbreak;\n\n\t\t\tcase 'Time':\n\t\t\t\tif (typeof time === 'string') {\n\t\t\t\t\treturn time;\n\t\t\t\t}\n\n\t\t\t\tvalue = time ? Math.round(time) : time;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalue = null;\n\t\t}\n\n\t\tif (value == null) {\n\t\t\treturn match;\n\t\t}\n\n\t\tlet valueString: string;\n\n\t\tswitch (format) {\n\t\t\tcase undefined:  // Happens if there is no format specifier.\n\t\t\tcase 'd':\n\t\t\tcase 'i':\n\t\t\tcase 'u':\n\t\t\t\tvalueString = value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase 'o':\n\t\t\t\tvalueString = value.toString(8);\n\t\t\t\tbreak;\n\n\t\t\tcase 'x':\n\t\t\t\tvalueString = value.toString(16);\n\t\t\t\tbreak;\n\n\t\t\tcase 'X':\n\t\t\t\tvalueString = value.toString(16).toUpperCase();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tvalueString = value.toString();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst width = parseInt(widthStr, 10) || 1;\n\t\treturn valueString.padStart(width, '0');\n\t});\n\n\treturn uri;\n}\n"]}