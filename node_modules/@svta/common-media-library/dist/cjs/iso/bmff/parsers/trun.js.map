{"version":3,"file":"trun.js","sourceRoot":"","sources":["../../../../../src/iso/bmff/parsers/trun.ts"],"names":[],"mappings":";;AA6CA,oBAyCC;AApDD;;;;;;;;;;GAUG;AACH,SAAgB,IAAI,CAAC,IAAa;IACjC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrC,IAAI,UAA8B,CAAC;IACnC,IAAI,gBAAoC,CAAC;IAEzC,IAAI,KAAK,GAAG,GAAG,EAAE,CAAC;QACjB,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC;IAED,IAAI,KAAK,GAAG,GAAG,EAAE,CAAC;QACjB,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAiB,WAAW,EAAE,GAAG,EAAE;QAClE,MAAM,MAAM,GAAmB,EAAE,CAAC;QAElC,IAAI,KAAK,GAAG,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,KAAK,GAAG,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;QACD,IAAI,KAAK,GAAG,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,KAAK,GAAG,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,2BAA2B,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3F,CAAC;QAED,OAAO,MAAM,CAAC;IACf,CAAC,CAAC,CAAC;IAEH,OAAO;QACN,OAAO;QACP,KAAK;QACL,WAAW;QACX,UAAU;QACV,gBAAgB;QAChB,OAAO;KACP,CAAC;AACH,CAAC;AAAA,CAAC","sourcesContent":["import type { FullBox } from '../FullBox.js';\nimport type { IsoView } from '../IsoView.js';\n\n/**\n * Track run sample\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type TrackRunSample = {\n\tsampleDuration?: number;\n\tsampleSize?: number;\n\tsampleFlags?: number;\n\tsampleCompositionTimeOffset?: number;\n};\n\n/**\n * ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n *\n * Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n * These defaults are not set explicitly here, but are left to resolve for the user.\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type TrackRunBox = FullBox & {\n\tsampleCount: number;\n\tdataOffset?: number;\n\tfirstSampleFlags?: number;\n\tsamples: TrackRunSample[];\n};\n\n/**\n * Parse a TrackRunBox from an IsoView\n *\n * @param view - The IsoView to read data from\n *\n * @returns A parsed TrackRunBox\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function trun(view: IsoView): TrackRunBox {\n\tconst { version, flags } = view.readFullBox();\n\tconst sampleCount = view.readUint(4);\n\tlet dataOffset: number | undefined;\n\tlet firstSampleFlags: number | undefined;\n\n\tif (flags & 0x1) {\n\t\tdataOffset = view.readInt(4);\n\t}\n\n\tif (flags & 0x4) {\n\t\tfirstSampleFlags = view.readUint(4);\n\t}\n\n\tconst samples = view.readEntries<TrackRunSample>(sampleCount, () => {\n\t\tconst sample: TrackRunSample = {};\n\n\t\tif (flags & 0x100) {\n\t\t\tsample.sampleDuration = view.readUint(4);\n\t\t}\n\t\tif (flags & 0x200) {\n\t\t\tsample.sampleSize = view.readUint(4);\n\t\t}\n\t\tif (flags & 0x400) {\n\t\t\tsample.sampleFlags = view.readUint(4);\n\t\t}\n\t\tif (flags & 0x800) {\n\t\t\tsample.sampleCompositionTimeOffset = (version === 1) ? view.readInt(4) : view.readUint(4);\n\t\t}\n\n\t\treturn sample;\n\t});\n\n\treturn {\n\t\tversion,\n\t\tflags,\n\t\tsampleCount,\n\t\tdataOffset,\n\t\tfirstSampleFlags,\n\t\tsamples,\n\t};\n};\n"]}