{"version":3,"file":"tfdt.js","sourceRoot":"","sources":["../../../../../src/iso/bmff/parsers/tfdt.ts"],"names":[],"mappings":";;AAyBA,oBAQC;AAnBD;;;;;;;;;;GAUG;AACH,SAAgB,IAAI,CAAC,IAAa;IACjC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAE9C,OAAO;QACN,OAAO;QACP,KAAK;QACL,mBAAmB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1D,CAAC;AACH,CAAC;AAAA,CAAC","sourcesContent":["import type { FullBox } from '../FullBox.js';\nimport type { IsoView } from '../IsoView.js';\n\n/**\n * ISO/IEC 14496-12:2012 - 8.8.12 Track Fragment Decode Time\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type TrackFragmentDecodeTimeBox = FullBox & {\n\tbaseMediaDecodeTime: number;\n};\n\n/**\n * Parse a TrackFragmentDecodeTimeBox from an IsoView\n *\n * @param view - The IsoView to read data from\n *\n * @returns A parsed TrackFragmentDecodeTimeBox\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function tfdt(view: IsoView): TrackFragmentDecodeTimeBox {\n\tconst { version, flags } = view.readFullBox();\n\n\treturn {\n\t\tversion,\n\t\tflags,\n\t\tbaseMediaDecodeTime: view.readUint((version == 1) ? 8 : 4),\n\t};\n};\n"]}