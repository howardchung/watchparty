{"version":3,"file":"ftyp.js","sourceRoot":"","sources":["../../../../../src/iso/bmff/parsers/ftyp.ts"],"names":[],"mappings":";;AAwBA,oBAYC;AAlCD,mDAA6C;AAW7C;;;;;;;;;;GAUG;AACH,SAAgB,IAAI,CAAC,IAAa;IACjC,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC1C,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAE9D,OAAO;QACN,UAAU;QACV,YAAY;QACZ,gBAAgB;KAChB,CAAC;AACH,CAAC","sourcesContent":["import type { IsoView } from '../IsoView.js';\nimport type { TypeBox } from '../TypeBox.js';\nimport { STRING } from '../fields/STRING.js';\n\n/**\n * ISO/IEC 14496-12:2012 - 4.3 File Type Box\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type FileTypeBox = TypeBox;\n\n/**\n * Parse a FileTypeBox from an IsoView\n *\n * @param view - The IsoView to read data from\n *\n * @returns A parsed FileTypeBox\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function ftyp(view: IsoView): FileTypeBox {\n\tconst size = 4;\n\tconst majorBrand = view.readString(4);\n\tconst minorVersion = view.readUint(4);\n\tconst length = view.bytesRemaining / size;\n\tconst compatibleBrands = view.readArray(STRING, size, length);\n\n\treturn {\n\t\tmajorBrand,\n\t\tminorVersion,\n\t\tcompatibleBrands,\n\t};\n}\n"]}