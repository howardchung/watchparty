{"version":3,"file":"readInt.js","sourceRoot":"","sources":["../../../../../src/iso/bmff/readers/readInt.ts"],"names":[],"mappings":";;AAAA,0BA2BC;AA3BD,SAAgB,OAAO,CAAC,QAAkB,EAAE,MAAc,EAAE,IAAY;IACvE,IAAI,MAAM,GAAG,GAAG,CAAC;IACjB,MAAM,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC;IAE5C,QAAQ,IAAI,EAAE,CAAC;QACd,KAAK,CAAC;YACL,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM;QAEP,KAAK,CAAC;YACL,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACnC,MAAM;QAEP,KAAK,CAAC;YACL,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACnC,MAAM;QAEP,KAAK,CAAC;YACL,8DAA8D;YAC9D,yDAAyD;YACzD,MAAM,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACrC,MAAM,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACzC,MAAM,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YACrC,MAAM;IACR,CAAC;IAED,OAAO,MAAM,CAAC;AACf,CAAC;AAAA,CAAC","sourcesContent":["export function readInt(dataView: DataView, offset: number, size: number): number {\n\tlet result = NaN;\n\tconst cursor = offset - dataView.byteOffset;\n\n\tswitch (size) {\n\t\tcase 1:\n\t\t\tresult = dataView.getInt8(cursor);\n\t\t\tbreak;\n\n\t\tcase 2:\n\t\t\tresult = dataView.getInt16(cursor);\n\t\t\tbreak;\n\n\t\tcase 4:\n\t\t\tresult = dataView.getInt32(cursor);\n\t\t\tbreak;\n\n\t\tcase 8:\n\t\t\t// Warning: JavaScript cannot handle 64-bit integers natively.\n\t\t\t// This will give unexpected results for integers >= 2^53\n\t\t\tconst s1 = dataView.getInt32(cursor);\n\t\t\tconst s2 = dataView.getInt32(cursor + 4);\n\t\t\tresult = (s1 * Math.pow(2, 32)) + s2;\n\t\t\tbreak;\n\t}\n\n\treturn result;\n};\n"]}