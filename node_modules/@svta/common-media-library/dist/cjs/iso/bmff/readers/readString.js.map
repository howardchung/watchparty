{"version":3,"file":"readString.js","sourceRoot":"","sources":["../../../../../src/iso/bmff/readers/readString.ts"],"names":[],"mappings":";;AAEA,gCAUC;AAZD,+CAAyC;AAEzC,SAAgB,UAAU,CAAC,QAAkB,EAAE,MAAc,EAAE,MAAc;IAC5E,IAAI,GAAG,GAAG,EAAE,CAAC;IAEb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACjC,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;QAC1B,MAAM,IAAI,GAAG,IAAA,sBAAQ,EAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAC3C,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,OAAO,GAAG,CAAC;AACZ,CAAC","sourcesContent":["import { readUint } from './readUint.js';\n\nexport function readString(dataView: DataView, offset: number, length: number): string {\n\tlet str = '';\n\n\tfor (let c = 0; c < length; c++) {\n\t\tconst cursor = offset + c;\n\t\tconst char = readUint(dataView, cursor, 1);\n\t\tstr += String.fromCharCode(char);\n\t}\n\n\treturn str;\n}\n"]}