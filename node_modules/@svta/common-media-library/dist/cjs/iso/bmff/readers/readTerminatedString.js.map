{"version":3,"file":"readTerminatedString.js","sourceRoot":"","sources":["../../../../../src/iso/bmff/readers/readTerminatedString.ts"],"names":[],"mappings":";;AAEA,oDAeC;AAjBD,+CAAyC;AAEzC,SAAgB,oBAAoB,CAAC,QAAkB,EAAE,MAAc;IACtE,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,IAAI,MAAM,GAAG,MAAM,CAAC;IAEpB,OAAO,MAAM,GAAG,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC3D,MAAM,IAAI,GAAG,IAAA,sBAAQ,EAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC;YAChB,MAAM;QACP,CAAC;QAED,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACjC,MAAM,EAAE,CAAC;IACV,CAAC;IAED,OAAO,GAAG,CAAC;AACZ,CAAC;AAAA,CAAC","sourcesContent":["import { readUint } from './readUint.js';\n\nexport function readTerminatedString(dataView: DataView, offset: number): string {\n\tlet str = '';\n\tlet cursor = offset;\n\n\twhile (cursor - dataView.byteOffset < dataView.byteLength) {\n\t\tconst char = readUint(dataView, cursor, 1);\n\t\tif (char === 0) {\n\t\t\tbreak;\n\t\t}\n\n\t\tstr += String.fromCharCode(char);\n\t\tcursor++;\n\t}\n\n\treturn str;\n};\n"]}