{"version":3,"file":"fromCmcdQuery.js","sourceRoot":"","sources":["../../../src/cmcd/fromCmcdQuery.ts"],"names":[],"mappings":";;AAeA,sCAQC;AAtBD,mDAA6C;AAC7C,mDAA6C;AAE7C;;;;;;;;;;GAUG;AACH,SAAgB,aAAa,CAAC,KAA+B;IAC5D,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC/B,KAAK,GAAG,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,0BAAU,CAAC,CAAC;IAEpC,OAAO,IAAA,0BAAU,EAAC,KAAe,CAAC,CAAC;AACpC,CAAC","sourcesContent":["import type { Cmcd } from './Cmcd.js';\nimport { CMCD_PARAM } from './CMCD_PARAM.js';\nimport { decodeCmcd } from './decodeCmcd.js';\n\n/**\n * Decode CMCD data from a query string.\n *\n * @param query - The query string to decode.\n *\n * @returns The decoded CMCD data.\n *\n * @group CMCD\n *\n * @beta\n */\nexport function fromCmcdQuery(query: string | URLSearchParams): Cmcd {\n\tif (typeof query === 'string') {\n\t\tquery = new URLSearchParams(query);\n\t}\n\n\tconst value = query.get(CMCD_PARAM);\n\n\treturn decodeCmcd(value as string);\n}\n"]}