{"version":3,"file":"getId3Timestamp.js","sourceRoot":"","sources":["../../../src/id3/getId3Timestamp.ts"],"names":[],"mappings":";;AAiBA,0CAYC;AA3BD,uDAAiD;AACjD,qEAA+D;AAC/D,oEAA8D;AAE9D;;;;;;;;;;GAUG;AACH,SAAgB,eAAe,CAAC,IAAgB;IAC/C,MAAM,MAAM,GAAe,IAAA,8BAAY,EAAC,IAAI,CAAC,CAAC;IAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACxC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAExB,IAAI,IAAA,4CAAmB,EAAC,KAAK,CAAC,EAAE,CAAC;YAChC,OAAO,IAAA,sCAAgB,EAAC,KAAqC,CAAC,CAAC;QAChE,CAAC;IACF,CAAC;IAED,OAAO,SAAS,CAAC;AAClB,CAAC","sourcesContent":["import type { DecodedId3Frame } from './DecodedId3Frame.js';\nimport type { Id3Frame } from './Id3Frame.js';\nimport { getId3Frames } from './getId3Frames.js';\nimport { isId3TimestampFrame } from './isId3TimestampFrame.js';\nimport { readId3Timestamp } from './util/readId3Timestamp.js';\n\n/**\n * Searches for the Elementary Stream timestamp found in the ID3 data chunk\n *\n * @param data - Block of data containing one or more ID3 tags\n *\n * @returns The timestamp\n *\n * @group ID3\n *\n * @beta\n */\nexport function getId3Timestamp(data: Uint8Array): number | undefined {\n\tconst frames: Id3Frame[] = getId3Frames(data);\n\n\tfor (let i = 0; i < frames.length; i++) {\n\t\tconst frame = frames[i];\n\n\t\tif (isId3TimestampFrame(frame)) {\n\t\t\treturn readId3Timestamp(frame as DecodedId3Frame<ArrayBuffer>);\n\t\t}\n\t}\n\n\treturn undefined;\n}\n"]}