{"version":3,"file":"utf8.js","sourceRoot":"","sources":["../../../../src/id3/util/utf8.ts"],"names":[],"mappings":";;AAAA,0BAMC;AAND,SAAgB,OAAO,CACtB,IAAkB,EAClB,SAAiB,CAAC,EAClB,SAAiB,QAAQ;IAEzB,OAAO,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,IAAI,CACZ,IAAkB,EAClB,MAAc,EACd,MAAc,EACd,IAAyE;IAEzE,MAAM,MAAM,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,eAAe,GAAQ,CAAC,CAAC;IAC7B,IAAI,mBAAmB,IAAI,IAAI,EAAE,CAAC;QACjC,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAC1C,CAAC;IACD,mDAAmD;IACnD,MAAM,UAAU,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,MAAM,OAAO,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,eAAe,CAAC;IACnE,gDAAgD;IAChD,MAAM,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,GAAG,eAAe,CAAC;IAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACnE,8CAA8C;IAC9C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;IACvE,OAAO,IAAI,IAAI,CAAC,MAAqB,EAAE,KAAK,EAAE,GAAG,GAAG,KAAK,CAAC,CAAC;AAC5D,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAkB;IAC/C,IAAI,IAAI,YAAY,WAAW,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC;IACb,CAAC;SACI,CAAC;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;AACF,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAQ;IAClC,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,YAAY,WAAW,IAAI,GAAG,CAAC,UAAU,KAAK,SAAS,IAAI,GAAG,CAAC,UAAU,KAAK,SAAS,CAAC;AACjH,CAAC","sourcesContent":["export function toUint8(\n\tdata: BufferSource,\n\toffset: number = 0,\n\tlength: number = Infinity,\n): Uint8Array {\n\treturn view(data, offset, length, Uint8Array);\n}\n\nfunction view<T extends ArrayBufferView>(\n\tdata: BufferSource,\n\toffset: number,\n\tlength: number,\n\tType: { new(buffer: ArrayBuffer, byteOffset: number, length: number): T },\n): T {\n\tconst buffer = unsafeGetArrayBuffer(data);\n\tlet bytesPerElement: any = 1;\n\tif ('BYTES_PER_ELEMENT' in Type) {\n\t\tbytesPerElement = Type.BYTES_PER_ELEMENT;\n\t}\n\t// Absolute end of the |data| view within |buffer|.\n\tconst dataOffset = isArrayBufferView(data) ? data.byteOffset : 0;\n\tconst dataEnd = ((dataOffset) + data.byteLength) / bytesPerElement;\n\t// Absolute start of the result within |buffer|.\n\tconst rawStart = ((dataOffset) + offset) / bytesPerElement;\n\tconst start = Math.floor(Math.max(0, Math.min(rawStart, dataEnd)));\n\t// Absolute end of the result within |buffer|.\n\tconst end = Math.floor(Math.min(start + Math.max(length, 0), dataEnd));\n\treturn new Type(buffer as ArrayBuffer, start, end - start);\n}\n\nfunction unsafeGetArrayBuffer(view: BufferSource) {\n\tif (view instanceof ArrayBuffer) {\n\t\treturn view;\n\t}\n\telse {\n\t\treturn view.buffer;\n\t}\n}\n\nfunction isArrayBufferView(obj: any): obj is ArrayBufferView {\n\treturn obj && obj.buffer instanceof ArrayBuffer && obj.byteLength !== undefined && obj.byteOffset !== undefined;\n}\n"]}