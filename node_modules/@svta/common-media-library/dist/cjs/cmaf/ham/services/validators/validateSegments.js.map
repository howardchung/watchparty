{"version":3,"file":"validateSegments.js","sourceRoot":"","sources":["../../../../../../src/cmaf/ham/services/validators/validateSegments.ts"],"names":[],"mappings":";;AA6BA,4CAeC;AAzCD,6DAAuD;AAEvD;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,SAAgB,gBAAgB,CAC/B,QAAmB,EACnB,OAAgB,EAChB,cAA2B;IAE3B,MAAM,UAAU,GAAe,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI;QAChD,MAAM,EAAE,IAAI;QACZ,aAAa,EAAE,EAAE;KACjB,CAAC;IAEF,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAgB,EAAE,EAAE;QACrC,IAAA,oCAAe,EAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACnB,CAAC","sourcesContent":["import type { Segment } from '../../types/model/Segment.js';\nimport type { Validation } from '../../types/Validation.js';\n\nimport { validateSegment } from './validateSegment.js';\n\n/**\n * Validate a list of segments.\n *\n * @example\n * ```ts\n * import cmaf, { Segment } from '@svta/common-media-library/cmaf-ham';\n * ...\n *\n * // const segments: Segment[] = ...;\n *\n * const validation = cmaf.validateSegments(segments);\n * ```\n *\n * Example output: `{ status: true|false, errorMessages: [...] }`\n *\n * @param segments - List of Segment from cmaf ham model\n * @param trackId - Optional: parent track id\n * @param prevValidation - Optional: validation object from parent previous validate method call\n * @returns Validation\n *\n * @group CMAF\n * @alpha\n *\n */\nexport function validateSegments(\n\tsegments: Segment[],\n\ttrackId?: string,\n\tprevValidation?: Validation,\n): Validation {\n\tconst validation: Validation = prevValidation ?? {\n\t\tstatus: true,\n\t\terrorMessages: [],\n\t};\n\n\tsegments.forEach((segment: Segment) => {\n\t\tvalidateSegment(segment, trackId, validation);\n\t});\n\n\treturn validation;\n}\n"]}