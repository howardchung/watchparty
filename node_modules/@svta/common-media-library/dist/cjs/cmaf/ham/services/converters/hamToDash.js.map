{"version":3,"file":"hamToDash.js","sourceRoot":"","sources":["../../../../../../src/cmaf/ham/services/converters/hamToDash.ts"],"names":[],"mappings":";;AAwBA,8BAIC;AAzBD,mEAA6D;AAC7D,oEAA8D;AAE9D;;;;;;;;;;;;;;;;;GAiBG;AACH,SAAgB,SAAS,CAAC,YAA4B;IACrD,MAAM,aAAa,GAAkB,gCAAa,CAAC,WAAW,EAAE,CAAC;IACjE,aAAa,CAAC,WAAW,CAAC,IAAI,0BAAU,EAAE,CAAC,CAAC;IAC5C,OAAO,aAAa,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC","sourcesContent":["import type { Manifest } from '../../types/manifest/Manifest.js';\nimport type { Presentation } from '../../types/model/Presentation.js';\n\nimport { DashMapper } from '../../mapper/dash/DashMapper.js';\nimport { MapperContext } from '../../mapper/MapperContext.js';\n\n/**\n * Convert HAM object into Dash Manifest.\n *\n * @example\n * Example on how to import the cmaf module and convert the ham `presentations`\n * array into the dash manifest.\n * ```ts\n * import cmaf from '@svta/common-media-library/cmaf-ham';\n *\n * const manifest = cmaf.hamToDash(presentations);\n * ```\n *\n * @param presentation - List of presentations from ham\n * @returns Manifest object containing the Dash manifest as string\n *\n * @group CMAF\n * @alpha\n */\nexport function hamToDash(presentation: Presentation[]): Manifest {\n\tconst mapperContext: MapperContext = MapperContext.getInstance();\n\tmapperContext.setStrategy(new DashMapper());\n\treturn mapperContext.getManifestFormat(presentation);\n}\n\n"]}