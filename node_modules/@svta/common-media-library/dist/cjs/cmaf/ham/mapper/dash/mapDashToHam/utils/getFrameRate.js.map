{"version":3,"file":"getFrameRate.js","sourceRoot":"","sources":["../../../../../../../../src/cmaf/ham/mapper/dash/mapDashToHam/utils/getFrameRate.ts"],"names":[],"mappings":";;AAwBA,oCAuBC;AA1CD,iEAMwC;AAExC;;;;;;;;;;GAUG;AACH,SAAgB,YAAY,CAC3B,aAA4B,EAC5B,cAA8B;;IAE9B,MAAM,aAAa,GAClB,MAAA,MAAA,cAAc,CAAC,CAAC,CAAC,SAAS,mCAAI,aAAa,CAAC,CAAC,CAAC,SAAS,mCAAI,EAAE,CAAC;IAC/D,IAAI,CAAC,aAAa,EAAE,CAAC;QACpB,OAAO,CAAC,KAAK,CACZ,kBAAkB,cAAc,CAAC,CAAC,CAAC,EAAE,oBAAoB,CACzD,CAAC;IACH,CAAC;IACD,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,mCAAoB,CAAC,CAAC;IAC5D,MAAM,kBAAkB,GAAG,QAAQ,CAAC,MAAA,SAAS,CAAC,EAAE,CAAC,wBAAS,CAAC,mCAAI,EAAE,CAAC,CAAC;IACnE,MAAM,oBAAoB,GAAG,QAAQ,CAAC,MAAA,SAAS,CAAC,EAAE,CAAC,0BAAW,CAAC,mCAAI,EAAE,CAAC,CAAC;IAEvE,OAAO;QACN,kBAAkB,EAAE,KAAK,CAAC,kBAAkB,CAAC;YAC5C,CAAC,CAAC,sCAAuB;YACzB,CAAC,CAAC,kBAAkB;QACrB,oBAAoB,EAAE,KAAK,CAAC,oBAAoB,CAAC;YAChD,CAAC,CAAC,mBAAI;YACN,CAAC,CAAC,oBAAoB;KACV,CAAC;AAChB,CAAC","sourcesContent":["import type { AdaptationSet } from '../../../../types/mapper/dash/AdaptationSet.js';\nimport type { Representation } from '../../../../types/mapper/dash/Representation.js';\n\nimport type { FrameRate } from '../../../../types/model/FrameRate.js';\n\nimport {\n\tDENOMINATOR,\n\tFRAME_RATE_NUMERATOR_30,\n\tFRAME_RATE_SEPARATOR,\n\tNUMERATOR,\n\tZERO,\n} from '../../../../utils/constants.js';\n\n/**\n * @internal\n *\n * Get the frame rate from a dash manifest.\n *\n * This functions assumes the adaptationSet and representation set are type video\n *\n * @param adaptationSet - To try to get the frameRate from\n * @param representation - To try to get the frameRate from\n * @returns object containing numerator and denominator\n */\nexport function getFrameRate(\n\tadaptationSet: AdaptationSet,\n\trepresentation: Representation,\n): FrameRate {\n\tconst frameRateDash: string =\n\t\trepresentation.$.frameRate ?? adaptationSet.$.frameRate ?? '';\n\tif (!frameRateDash) {\n\t\tconsole.error(\n\t\t\t`Representation ${representation.$.id} has no frame rate`,\n\t\t);\n\t}\n\tconst frameRate = frameRateDash.split(FRAME_RATE_SEPARATOR);\n\tconst frameRateNumerator = parseInt(frameRate.at(NUMERATOR) ?? '');\n\tconst frameRateDenominator = parseInt(frameRate.at(DENOMINATOR) ?? '');\n\n\treturn {\n\t\tframeRateNumerator: isNaN(frameRateNumerator)\n\t\t\t? FRAME_RATE_NUMERATOR_30\n\t\t\t: frameRateNumerator,\n\t\tframeRateDenominator: isNaN(frameRateDenominator)\n\t\t\t? ZERO\n\t\t\t: frameRateDenominator,\n\t} as FrameRate;\n}\n"]}