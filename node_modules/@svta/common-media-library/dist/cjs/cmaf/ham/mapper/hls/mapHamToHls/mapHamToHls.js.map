{"version":3,"file":"mapHamToHls.js","sourceRoot":"","sources":["../../../../../../../src/cmaf/ham/mapper/hls/mapHamToHls/mapHamToHls.ts"],"names":[],"mappings":";;AAQA,kCA2BC;AA7BD,yFAAmF;AAEnF,SAAgB,WAAW,CAAC,aAA6B;IACxD,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,0HAA0H;IAC7I,IAAI,YAAY,GAAG,2BAA2B,OAAO,MAAM,CAAC;IAC5D,MAAM,SAAS,GAAe,EAAE,CAAC;IACjC,aAAa,CAAC,GAAG,CAAC,CAAC,YAA0B,EAAE,EAAE;QAChD,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAA0B,EAAE,EAAE;YAC7D,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAA0B,EAAE,EAAE;gBAC7D,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAY,EAAE,EAAE;;oBACxC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAC1B,IAAA,gEAA6B,EAAC,KAAK,CAAC,CAAC;oBACtC,YAAY,IAAI,OAAO,CAAC;oBACxB,MAAM,gBAAgB,GACrB,MAAA,KAAK,CAAC,QAAQ,mCAAI,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC;oBACtC,SAAS,CAAC,IAAI,CAAC;wBACd,QAAQ,EAAE,QAAQ;wBAClB,IAAI,EAAE,KAAK;wBACX,QAAQ,EAAE,gBAAgB;qBAC1B,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,OAAO;QACN,QAAQ,EAAE,YAAY;QACtB,kBAAkB,EAAE,SAAS;QAC7B,IAAI,EAAE,KAAK;KACX,CAAC;AACH,CAAC","sourcesContent":["import type { Manifest } from '../../../types/manifest/Manifest.js';\nimport type { Presentation } from '../../../types/model/Presentation.js';\nimport type { SelectionSet } from '../../../types/model/SelectionSet.js';\nimport type { SwitchingSet } from '../../../types/model/SwitchingSet.js';\nimport type { Track } from '../../../types/model/Track.js';\n\nimport { generateManifestPlaylistPiece } from './generateManifestPlaylistPiece.js';\n\nexport function mapHamToHls(presentations: Presentation[]): Manifest {\n\tconst version = 7; //TODO Add a way to change the version. For now version 7 is hardcoded as it is the first version of HLS with CMAF support\n\tlet mainManifest = `#EXTM3U\\n#EXT-X-VERSION:${version}\\n\\n`;\n\tconst playlists: Manifest[] = [];\n\tpresentations.map((presentation: Presentation) => {\n\t\tpresentation.selectionSets.map((selectionSet: SelectionSet) => {\n\t\t\tselectionSet.switchingSets.map((switchingSet: SwitchingSet) => {\n\t\t\t\tswitchingSet.tracks.map((track: Track) => {\n\t\t\t\t\tconst { mainRef, playlist } =\n\t\t\t\t\t\tgenerateManifestPlaylistPiece(track);\n\t\t\t\t\tmainManifest += mainRef;\n\t\t\t\t\tconst manifestFileName =\n\t\t\t\t\t\ttrack.fileName ?? `${track.id}.m3u8`;\n\t\t\t\t\tplaylists.push({\n\t\t\t\t\t\tmanifest: playlist,\n\t\t\t\t\t\ttype: 'hls',\n\t\t\t\t\t\tfileName: manifestFileName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\treturn {\n\t\tmanifest: mainManifest,\n\t\tancillaryManifests: playlists,\n\t\ttype: 'hls',\n\t};\n}\n"]}