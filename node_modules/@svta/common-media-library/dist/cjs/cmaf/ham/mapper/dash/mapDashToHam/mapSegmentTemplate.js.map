{"version":3,"file":"mapSegmentTemplate.js","sourceRoot":"","sources":["../../../../../../../src/cmaf/ham/mapper/dash/mapDashToHam/mapSegmentTemplate.ts"],"names":[],"mappings":";;AAmBA,gDAqBC;AAnCD,uEAAiE;AACjE,2EAAqE;AACrE,yEAAmE;AAEnE;;;;;;;;;GASG;AACH,SAAgB,kBAAkB,CACjC,cAA8B,EAC9B,QAAgB,EAChB,eAAgC;;IAEhC,MAAM,gBAAgB,GAAW,IAAA,4CAAmB,EACnD,eAAe,EACf,QAAQ,CACR,CAAC;IACF,MAAM,IAAI,GAAW,CAAC,CAAC,MAAA,eAAe,CAAC,CAAC,CAAC,WAAW,mCAAI,CAAC,CAAC,CAAC;IAC3D,MAAM,QAAQ,GAAc,EAAE,CAAC;IAC/B,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,gBAAgB,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;QACxD,QAAQ,CAAC,IAAI,CAAC;YACb,QAAQ,EAAE,IAAA,wCAAiB,EAC1B,eAAe,CAAC,CAAC,CAAC,QAAQ,EAC1B,eAAe,CAAC,CAAC,CAAC,SAAS,CAC3B;YACD,GAAG,EAAE,IAAA,0CAAkB,EAAC,cAAc,EAAE,eAAe,EAAE,EAAE,CAAC;SACjD,CAAC,CAAC;IACf,CAAC;IACD,OAAO,QAAQ,CAAC;AACjB,CAAC","sourcesContent":["import type { Representation } from '../../../types/mapper/dash/Representation.js';\nimport type { SegmentTemplate } from '../../../types/mapper/dash/SegmentTemplate.js';\n\nimport type { Segment } from '../../../types/model/Segment.js';\n\nimport { calculateDuration } from './utils/calculateDuration.js';\nimport { getNumberOfSegments } from './utils/getNumberOfSegments.js';\nimport { getUrlFromTemplate } from './utils/getUrlFromTemplate.js';\n\n/**\n * @internal\n *\n * Maps SegmentTemplate from dash to Segment list from ham.\n *\n * @param representation - Representation to generate the urls\n * @param duration - Duration of the segments\n * @param segmentTemplate - SegmentTemplate to get the properties from\n * @returns list of ham segments\n */\nexport function mapSegmentTemplate(\n\trepresentation: Representation,\n\tduration: number,\n\tsegmentTemplate: SegmentTemplate,\n): Segment[] {\n\tconst numberOfSegments: number = getNumberOfSegments(\n\t\tsegmentTemplate,\n\t\tduration,\n\t);\n\tconst init: number = +(segmentTemplate.$.startNumber ?? 0);\n\tconst segments: Segment[] = [];\n\tfor (let id = init; id < numberOfSegments + init; id++) {\n\t\tsegments.push({\n\t\t\tduration: calculateDuration(\n\t\t\t\tsegmentTemplate.$.duration,\n\t\t\t\tsegmentTemplate.$.timescale,\n\t\t\t),\n\t\t\turl: getUrlFromTemplate(representation, segmentTemplate, id),\n\t\t} as Segment);\n\t}\n\treturn segments;\n}\n"]}