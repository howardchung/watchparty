{"version":3,"file":"formatSegments.js","sourceRoot":"","sources":["../../../../../../../../src/cmaf/ham/mapper/hls/mapHlsToHam/utils/formatSegments.ts"],"names":[],"mappings":";;AAgBA,wCAWC;AAxBD,uDAAiD;AAEjD;;;;;;;;;;GAUG;AACH,SAAgB,cAAc,CAAC,QAAsB;;IACpD,OAAO,CACN,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,GAAG,CAAC,CAAC,OAAmB,EAAE,EAAE;QACrC,MAAM,SAAS,GAAG,IAAA,8BAAY,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,CAAC;QACnD,OAAO;YACN,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,GAAG,CAAC,SAAS,IAAI,EAAE,SAAS,EAAE,CAAC;SACpB,CAAC;IACd,CAAC,CAAC,mCAAI,EAAE,CACR,CAAC;AACH,CAAC","sourcesContent":["import type { SegmentHls } from '../../../../types/mapper/hls/SegmentHls.js';\nimport type { Segment } from '../../../../types/model/Segment.js';\n\nimport { getByterange } from './getByterange.js';\n\n/**\n * @internal\n *\n * Format the hls segments into the ham segments.\n *\n * @param segments - List of HLS segments\n * @returns ham formatted list of segments\n *\n * @group CMAF\n * @alpha\n */\nexport function formatSegments(segments: SegmentHls[]): Segment[] {\n\treturn (\n\t\tsegments?.map((segment: SegmentHls) => {\n\t\t\tconst byteRange = getByterange(segment?.byterange);\n\t\t\treturn {\n\t\t\t\tduration: segment.duration,\n\t\t\t\turl: segment.uri,\n\t\t\t\t...(byteRange && { byteRange }),\n\t\t\t} as Segment;\n\t\t}) ?? []\n\t);\n}\n"]}