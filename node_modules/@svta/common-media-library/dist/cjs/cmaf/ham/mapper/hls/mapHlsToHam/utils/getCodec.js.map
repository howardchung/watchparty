{"version":3,"file":"getCodec.js","sourceRoot":"","sources":["../../../../../../../../src/cmaf/ham/mapper/hls/mapHlsToHam/utils/getCodec.ts"],"names":[],"mappings":";;AAYA,4BAiBC;AA7BD;;;;;;;;;;;GAWG;AACH,SAAgB,QAAQ,CAAC,IAAY,EAAE,MAAe;;IACrD,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;QACtB,kEAAkE;QAClE,0DAA0D;QAC1D,OAAO,WAAW,CAAC;IACpB,CAAC;SACI,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;QAC3B,0CAA0C;QAC1C,4CAA4C;QAC5C,yBAAyB;QACzB,qCAAqC;QACrC,OAAO,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,mCAAI,EAAE,CAAC;IACvC,CAAC;SACI,CAAC;QACL,uBAAuB;QACvB,OAAO,EAAE,CAAC;IACX,CAAC;AACF,CAAC","sourcesContent":["/**\n * @internal\n *\n * Get the codec for a type of content.\n *\n * @param type - Type of the content to get the codecs from\n * @param codecs - String containing multiple codecs separated with commas\n * @returns string containing codec\n *\n * @group CMAF\n * @alpha\n */\nexport function getCodec(type: string, codecs?: string): string {\n\tif (type === 'audio') {\n\t\t// Using codec mp4a.40.2 for now, we should retrieve it by finding\n\t\t// the video playlist that is related to this audio group.\n\t\treturn 'mp4a.40.2';\n\t}\n\telse if (type === 'video') {\n\t\t// CODECS could be a comma separated value\n\t\t// where it has video and audio codec. Using\n\t\t// position zero for now.\n\t\t// TODO: Get the correct video codec.\n\t\treturn codecs?.split(',').at(0) ?? '';\n\t}\n\telse {\n\t\t// if (type === 'text')\n\t\treturn '';\n\t}\n}\n"]}