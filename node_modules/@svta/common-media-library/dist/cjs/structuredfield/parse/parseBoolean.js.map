{"version":3,"file":"parseBoolean.js","sourceRoot":"","sources":["../../../../src/structuredfield/parse/parseBoolean.ts"],"names":[],"mappings":";;AAqBA,oCAiBC;AAtCD,oDAA8C;AAE9C,qDAA+C;AAC/C,mDAA6C;AAE7C,4BAA4B;AAC5B,EAAE;AACF,wEAAwE;AACxE,0CAA0C;AAC1C,EAAE;AACF,uEAAuE;AACvE,EAAE;AACF,mDAAmD;AACnD,EAAE;AACF,sEAAsE;AACtE,wCAAwC;AACxC,EAAE;AACF,sEAAsE;AACtE,yCAAyC;AACzC,EAAE;AACF,0CAA0C;AAC1C,SAAgB,YAAY,CAAC,GAAW;IACvC,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,MAAM,IAAA,0BAAU,EAAC,GAAG,EAAE,oBAAO,CAAC,CAAC;IAChC,CAAC;IAED,CAAC,EAAE,CAAC;IAEJ,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,OAAO,IAAA,4BAAW,EAAC,IAAI,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,OAAO,IAAA,4BAAW,EAAC,KAAK,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,IAAA,0BAAU,EAAC,GAAG,EAAE,oBAAO,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import { BOOLEAN } from '../utils/BOOLEAN.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.8.  Parsing a Boolean\n//\n// Given an ASCII string as input_string, return a Boolean. input_string\n// is modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is not \"?\", fail parsing.\n//\n// 2.  Discard the first character of input_string.\n//\n// 3.  If the first character of input_string matches \"1\", discard the\n//     first character, and return true.\n//\n// 4.  If the first character of input_string matches \"0\", discard the\n//     first character, and return false.\n//\n// 5.  No value has matched; fail parsing.\nexport function parseBoolean(src: string): ParsedValue<boolean> {\n\tlet i = 0;\n\tif (src[i] !== '?') {\n\t\tthrow parseError(src, BOOLEAN);\n\t}\n\n\ti++;\n\n\tif (src[i] === '1') {\n\t\treturn parsedValue(true, src.substring(++i));\n\t}\n\n\tif (src[i] === '0') {\n\t\treturn parsedValue(false, src.substring(++i));\n\t}\n\n\tthrow parseError(src, BOOLEAN);\n}\n"]}