{"version":3,"file":"parseItem.js","sourceRoot":"","sources":["../../../../src/structuredfield/parse/parseItem.ts"],"names":[],"mappings":";;AAoBA,8BAWC;AA9BD,4CAAsC;AAEtC,qDAA+C;AAC/C,yDAAmD;AACnD,6DAAuD;AAEvD,0BAA0B;AAC1B,EAAE;AACF,8DAA8D;AAC9D,mEAAmE;AACnE,SAAS;AACT,EAAE;AACF,iEAAiE;AACjE,2CAA2C;AAC3C,EAAE;AACF,iEAAiE;AACjE,2CAA2C;AAC3C,EAAE;AACF,gDAAgD;AAChD,SAAgB,SAAS,CAAC,GAAW,EAAE,OAAyB;IAC/D,MAAM,cAAc,GAAG,IAAA,gCAAa,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACnD,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC;IAEzB,MAAM,gBAAgB,GAAG,IAAA,oCAAe,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACvD,GAAG,GAAG,gBAAgB,CAAC,GAAG,CAAC;IAE3B,OAAO,IAAA,4BAAW,EACjB,IAAI,kBAAM,CAAC,cAAc,CAAC,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC,EACxD,GAAG,CACH,CAAC;AACH,CAAC","sourcesContent":["import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport { SfItem } from '../SfItem.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseBareItem } from './parseBareItem.js';\nimport { parseParameters } from './parseParameters.js';\n\n// 4.2.3.  Parsing an Item\n//\n// Given an ASCII string as input_string, return a (bare_item,\n// parameters) tuple. input_string is modified to remove the parsed\n// value.\n//\n// 1.  Let bare_item be the result of running Parsing a Bare Item\n//     (Section 4.2.3.1) with input_string.\n//\n// 2.  Let parameters be the result of running Parsing Parameters\n//     (Section 4.2.3.2) with input_string.\n//\n// 3.  Return the tuple (bare_item, parameters).\nexport function parseItem(src: string, options?: SfDecodeOptions): ParsedValue<SfItem> {\n\tconst parsedBareItem = parseBareItem(src, options);\n\tsrc = parsedBareItem.src;\n\n\tconst parsedParameters = parseParameters(src, options);\n\tsrc = parsedParameters.src;\n\n\treturn parsedValue(\n\t\tnew SfItem(parsedBareItem.value, parsedParameters.value),\n\t\tsrc,\n\t);\n}\n"]}