{"version":3,"file":"serializeDate.js","sourceRoot":"","sources":["../../../../src/structuredfield/serialize/serializeDate.ts"],"names":[],"mappings":";;AAUA,sCAEC;AAZD,+DAAyD;AAEzD,8BAA8B;AAC9B,EAAE;AACF,qEAAqE;AACrE,8BAA8B;AAC9B,yBAAyB;AACzB,oEAAoE;AACpE,uCAAuC;AACvC,qBAAqB;AACrB,SAAgB,aAAa,CAAC,KAAW;IACxC,OAAO,IAAI,IAAA,sCAAgB,EAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACvD,CAAC","sourcesContent":["import { serializeInteger } from './serializeInteger.js';\n\n// 4.1.10.  Serializing a Date\n//\n// Given a Date as input_integer, return an ASCII string suitable for\n// use in an HTTP field value.\n// 1.  Let output be \"@\".\n// 2.  Append to output the result of running Serializing an Integer\n//     with input_date (Section 4.1.4).\n// 3.  Return output.\nexport function serializeDate(value: Date) {\n\treturn `@${serializeInteger(value.getTime() / 1000)}`;\n}\n"]}