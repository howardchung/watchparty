{"version":3,"file":"serializeItem.js","sourceRoot":"","sources":["../../../../src/structuredfield/serialize/serializeItem.ts"],"names":[],"mappings":";;AAmBA,sCAOC;AAzBD,4CAAsC;AACtC,iEAA2D;AAC3D,6DAAuD;AAEvD,8BAA8B;AAC9B,EAAE;AACF,uEAAuE;AACvE,0DAA0D;AAC1D,EAAE;AACF,qCAAqC;AACrC,EAAE;AACF,2DAA2D;AAC3D,gDAAgD;AAChD,EAAE;AACF,0DAA0D;AAC1D,sDAAsD;AACtD,EAAE;AACF,qBAAqB;AACrB,SAAgB,aAAa,CAAC,KAA0B;IACvD,IAAI,KAAK,YAAY,kBAAM,EAAE,CAAC;QAC7B,OAAO,GAAG,IAAA,wCAAiB,EAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAA,oCAAe,EAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;IAC5E,CAAC;SACI,CAAC;QACL,OAAO,IAAA,wCAAiB,EAAC,KAAK,CAAC,CAAC;IACjC,CAAC;AACF,CAAC","sourcesContent":["import type { SfBareItem } from '../SfBareItem.js';\nimport { SfItem } from '../SfItem.js';\nimport { serializeBareItem } from './serializeBareItem.js';\nimport { serializeParams } from './serializeParams.js';\n\n// 4.1.3.  Serializing an Item\n//\n// Given an Item as bare_item and Parameters as item_parameters, return\n// an ASCII string suitable for use in a HTTP field value.\n//\n// 1.  Let output be an empty string.\n//\n// 2.  Append the result of running Serializing a Bare Item\n//     Section 4.1.3.1 with bare_item to output.\n//\n// 3.  Append the result of running Serializing Parameters\n//     Section 4.1.1.2 with item_parameters to output.\n//\n// 4.  Return output.\nexport function serializeItem(value: SfItem | SfBareItem): string {\n\tif (value instanceof SfItem) {\n\t\treturn `${serializeBareItem(value.value)}${serializeParams(value.params)}`;\n\t}\n\telse {\n\t\treturn serializeBareItem(value);\n\t}\n}\n"]}