{"version":3,"file":"urlToRelativePath.js","sourceRoot":"","sources":["../../../src/utils/urlToRelativePath.ts"],"names":[],"mappings":";;AAWA,8CAwBC;AAnCD;;;;;;;;;;GAUG;AACH,SAAgB,iBAAiB,CAAC,GAAW,EAAE,IAAY;IAC1D,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IACxB,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;IAE3B,IAAI,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;QAC/B,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAEvD,wBAAwB;IACxB,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAClC,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,QAAQ,CAAC,KAAK,EAAE,CAAC;IAClB,CAAC;IAED,iBAAiB;IACjB,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC;QACxB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC","sourcesContent":["/**\n * Constructs a relative path from a URL.\n *\n * @param url - The destination URL\n * @param base - The base URL\n * @returns The relative path\n *\n * @group Utils\n *\n * @beta\n */\nexport function urlToRelativePath(url: string, base: string): string {\n\tconst to = new URL(url);\n\tconst from = new URL(base);\n\n\tif (to.origin !== from.origin) {\n\t\treturn url;\n\t}\n\n\tconst toPath = to.pathname.split('/').slice(1);\n\tconst fromPath = from.pathname.split('/').slice(1, -1);\n\n\t// remove common parents\n\twhile (toPath[0] === fromPath[0]) {\n\t\ttoPath.shift();\n\t\tfromPath.shift();\n\t}\n\n\t// add back paths\n\twhile (fromPath.length) {\n\t\tfromPath.shift();\n\t\ttoPath.unshift('..');\n\t}\n\n\treturn toPath.join('/');\n}\n"]}