{"version":3,"file":"getPSSHData.js","sourceRoot":"","sources":["../../../../src/drm/cenc/getPSSHData.ts"],"names":[],"mappings":";;AAYA,kCAcC;AA1BD;;;;;;;;;;;GAWG;AACH,SAAgB,WAAW,CAAC,IAAiB;IAC5C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,2BAA2B;IAC7C,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEhC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe;IACtD,IAAI,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC;IAE7B,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC5C,UAAU,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,IAAI,CAAC,CAAC,CAAC,YAAY;IAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/**\n * Returns the data portion of a single PSSH box.\n *\n * @param pssh - The PSSH ArrayBuffer.\n * @returns The data portion of the PSSH.\n *\n * @group DRM\n * @beta\n * \n * @example\n * {@includeCode ../../../test/drm/cenc/getPSSHData.test.ts#example}\n */\nexport function getPSSHData(pssh: ArrayBuffer): ArrayBuffer {\n\tconst offset = 8; // Box size and type fields\n\tconst view = new DataView(pssh);\n    \n\tconst version = view.getUint8(offset); // Read version\n\tlet dataOffset = offset + 20; \n  \n\tif (version > 0) {\n\t\tconst kidCount = view.getUint32(dataOffset);\n\t\tdataOffset += 4 + (16 * kidCount);\n\t}\n  \n\tdataOffset += 4; // Data size\n\treturn pssh.slice(dataOffset);\n}\n  \n"]}