{"version":3,"file":"getLegacyKeySystemAccess.js","sourceRoot":"","sources":["../../../../src/drm/keysystem/getLegacyKeySystemAccess.ts"],"names":[],"mappings":";;AAeA,4DAkBC;AA9BD,iGAA2F;AAC3F,mGAA6F;AAE7F;;;;;;;;GAQG;AACH,SAAgB,wBAAwB,CACvC,gBAAwE;IAExE,KAAK,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,gBAAgB,EAAE,CAAC;QAChD,MAAM,eAAe,GAAG,IAAA,0EAAkC,EAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACrF,IAAI,eAAe,EAAE,CAAC;YACrB,MAAM,aAAa,GAAG,IAAA,wEAAiC,EACtD,eAAe,CAAC,cAAc,EAC9B,eAAe,CAAC,cAAc,CAC9B,CAAC;YAEF,OAAO;gBACN,SAAS,EAAE,EAAE,CAAC,YAAY;gBAC1B,aAAa;aACb,CAAC;QACH,CAAC;IACF,CAAC;IACD,OAAO,IAAI,CAAC;AACb,CAAC","sourcesContent":["import type { KeySystem } from '../common/KeySystem.js';\nimport type { KeySystemAccess } from '../common/KeySystemAccess.js';\nimport type { KeySystemConfiguration } from '../common/KeySystemConfiguration.js';\nimport { createMediaKeySystemConfiguration } from './createMediaKeySystemConfiguration.js';\nimport { getSupportedKeySystemConfiguration } from './getSupportedKeySystemConfiguration.js';\n\n/**\n * Fallback method to get key system access using legacy MediaKeys.isTypeSupported().\n *\n * @param ksConfigurations - An array of key system configurations.\n * @returns A KeySystemAccess object if successful, or null if no system is supported.\n *\n * @group DRM\n * @beta\n */\nexport function getLegacyKeySystemAccess(\n\tksConfigurations: { ks: KeySystem; configs: KeySystemConfiguration[] }[],\n): KeySystemAccess | null {\n\tfor (const { ks, configs } of ksConfigurations) {\n\t\tconst supportedConfig = getSupportedKeySystemConfiguration(ks.systemString, configs);\n\t\tif (supportedConfig) {\n\t\t\tconst configuration = createMediaKeySystemConfiguration(\n\t\t\t\tsupportedConfig.supportedAudio,\n\t\t\t\tsupportedConfig.supportedVideo,\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tkeySystem: ks.systemString,\n\t\t\t\tconfiguration,\n\t\t\t};\n\t\t}\n\t}\n\treturn null;\n}\n"]}