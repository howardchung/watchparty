{"version":3,"file":"decodeSfDict.js","sourceRoot":"","sources":["../../src/structuredfield/decodeSfDict.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AAEvC;;;;;;;;;GASG;AACH,MAAM,UAAU,YAAY,CAAC,KAAa,EAAE,OAAyB;IACpE,IAAI,CAAC;QACJ,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;QACxD,IAAI,GAAG,KAAK,EAAE,EAAE,CAAC;YAChB,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IACD,OAAO,KAAK,EAAE,CAAC;QACd,MAAM,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;AACF,CAAC","sourcesContent":["import type { SfDecodeOptions } from './SfDecodeOptions.js';\nimport type { SfDictionary } from './SfDictionary.js';\nimport { parseDict } from './parse/parseDict.js';\nimport { parseError } from './parse/parseError.js';\nimport { DICT } from './utils/DICT.js';\n\n/**\n * Decode a structured field string into a structured field dictionary\n *\n * @param input - The structured field string to decode\n * @returns The structured field dictionary\n *\n * @group Structured Field\n *\n * @beta\n */\nexport function decodeSfDict(input: string, options?: SfDecodeOptions): SfDictionary {\n\ttry {\n\t\tconst { src, value } = parseDict(input.trim(), options);\n\t\tif (src !== '') {\n\t\t\tthrow parseError(src, DICT);\n\t\t}\n\t\treturn value;\n\t}\n\tcatch (cause) {\n\t\tthrow parseError(input, DICT, cause);\n\t}\n}\n"]}