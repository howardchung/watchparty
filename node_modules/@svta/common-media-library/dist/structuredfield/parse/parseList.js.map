{"version":3,"file":"parseList.js","sourceRoot":"","sources":["../../../src/structuredfield/parse/parseList.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAExC,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AAEjE,yBAAyB;AACzB,EAAE;AACF,4DAA4D;AAC5D,uEAAuE;AACvE,2BAA2B;AAC3B,EAAE;AACF,qCAAqC;AACrC,EAAE;AACF,uCAAuC;AACvC,EAAE;AACF,qEAAqE;AACrE,0DAA0D;AAC1D,EAAE;AACF,gEAAgE;AAChE,EAAE;AACF,oDAAoD;AACpD,EAAE;AACF,oEAAoE;AACpE,6BAA6B;AAC7B,EAAE;AACF,gEAAgE;AAChE,EAAE;AACF,oEAAoE;AACpE,mBAAmB;AACnB,EAAE;AACF,kEAAkE;AAClE,cAAc;AACd,MAAM,UAAU,SAAS,CAAC,GAAW,EAAE,OAAyB;IAC/D,MAAM,KAAK,GAAe,EAAE,CAAC;IAC7B,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACvB,MAAM,qBAAqB,GAAG,oBAAoB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QACjE,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAExC,GAAG,GAAG,qBAAqB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACvC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACtB,OAAO,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAChC,CAAC;QAED,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACpB,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC;QAED,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAC9B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACxC,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7B,CAAC;IACF,CAAC;IACD,OAAO,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport type { SfMember } from '../SfMember.js';\nimport { LIST } from '../utils/LIST.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\nimport { parseItemOrInnerList } from './parseItemOrInnerList.js';\n\n// 4.2.1.  Parsing a List\n//\n// Given an ASCII string as input_string, return an array of\n// (item_or_inner_list, parameters) tuples. input_string is modified to\n// remove the parsed value.\n//\n// 1.  Let members be an empty array.\n//\n// 2.  While input_string is not empty:\n//\n//     1.  Append the result of running Parsing an Item or Inner List\n//         (Section 4.2.1.1) with input_string to members.\n//\n//     2.  Discard any leading OWS characters from input_string.\n//\n//     3.  If input_string is empty, return members.\n//\n//     4.  Consume the first character of input_string; if it is not\n//         \",\", fail parsing.\n//\n//     5.  Discard any leading OWS characters from input_string.\n//\n//     6.  If input_string is empty, there is a trailing comma; fail\n//         parsing.\n//\n// 3.  No structured data has been found; return members (which is\n//     empty).\nexport function parseList(src: string, options?: SfDecodeOptions): ParsedValue<SfMember[]> {\n\tconst value: SfMember[] = [];\n\twhile (src.length > 0) {\n\t\tconst parsedItemOrInnerList = parseItemOrInnerList(src, options);\n\t\tvalue.push(parsedItemOrInnerList.value);\n\n\t\tsrc = parsedItemOrInnerList.src.trim();\n\t\tif (src.length === 0) {\n\t\t\treturn parsedValue(value, src);\n\t\t}\n\n\t\tif (src[0] !== ',') {\n\t\t\tthrow parseError(src, LIST);\n\t\t}\n\n\t\tsrc = src.substring(1).trim();\n\t\tif (src.length === 0 || src[0] === ',') {\n\t\t\tthrow parseError(src, LIST);\n\t\t}\n\t}\n\treturn parsedValue(value, src);\n}\n"]}