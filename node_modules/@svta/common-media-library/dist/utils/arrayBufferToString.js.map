{"version":3,"file":"arrayBufferToString.js","sourceRoot":"","sources":["../../src/utils/arrayBufferToString.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAErC;;;;;;;;;;;;;GAaG;AACH,MAAM,UAAU,mBAAmB,CAAC,WAAwB,EAAE,QAAkB;IAC/E,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE,CAAC;QACxC,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,MAAM,GAAG,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IAEhG,OAAO,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC;AACvC,CAAC","sourcesContent":["import type { Encoding } from './Encoding.js';\nimport { UTF_16 } from './UTF_16.js';\n\n/**\n * Converts an ArrayBuffer to a string.\n *\n * @param arrayBuffer - The ArrayBuffer to convert.\n * @param encoding - The encoding to use.\n * @returns The string representation of the ArrayBuffer.\n *\n * @group Utils\n *\n * @beta\n *\n * @example\n * {@includeCode ../../test/utils/arrayBufferToString.test.ts#example}\n */\nexport function arrayBufferToString(arrayBuffer: ArrayBuffer, encoding: Encoding): string {\n\tif (typeof TextDecoder !== 'undefined') {\n\t\treturn new TextDecoder(encoding).decode(arrayBuffer);\n\t}\n\n\tconst buffer = encoding === UTF_16 ? new Uint16Array(arrayBuffer) : new Uint8Array(arrayBuffer);\n\n\treturn String.fromCharCode(...buffer);\n}\n"]}