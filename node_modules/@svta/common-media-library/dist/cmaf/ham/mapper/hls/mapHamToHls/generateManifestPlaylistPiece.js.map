{"version":3,"file":"generateManifestPlaylistPiece.js","sourceRoot":"","sources":["../../../../../../src/cmaf/ham/mapper/hls/mapHamToHls/generateManifestPlaylistPiece.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAOrD,MAAM,UAAU,6BAA6B,CAAC,KAAY;;IACzD,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,yCAAyC;IAClE,MAAM,aAAa,GAAG,MAAA,KAAK,CAAC,QAAQ,mCAAI,GAAG,KAAK,CAAC,EAAE,OAAO,CAAC;IAE3D,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,QAAQ,GAAG,kCAAkC,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,qDAAqD,aAAa,IAAI,CAAC;IAE9J,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE,CAAC;QAC1C,MAAM,UAAU,GAAG,KAAmB,CAAC;QACvC,OAAO,IAAI,+BAA+B,UAAU,CAAC,SAAS,YAAY,UAAU,CAAC,KAAK,gBAAgB,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,MAAM,KAAK,aAAa,IAAI,CAAC;QACtK,QAAQ,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;SACI,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE,CAAC;QAC/C,MAAM,UAAU,GAAG,KAAmB,CAAC;QACvC,OAAO,IAAI,qCAAqC,UAAU,CAAC,EAAE,eAAe,UAAU,CAAC,QAAQ,WAAW,UAAU,CAAC,EAAE,UAAU,aAAa,KAAK,CAAC;QACpJ,QAAQ,IAAI,eAAe,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;SACI,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE,CAAC;QAC9C,MAAM,SAAS,GAAG,KAAkB,CAAC;QACrC,OAAO,IAAI,yCAAyC,SAAS,CAAC,EAAE,WAAW,SAAS,CAAC,EAAE,eAAe,SAAS,CAAC,QAAQ,UAAU,aAAa,KAAK,CAAC;IACtJ,CAAC;IAED,QAAQ,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAE3D,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;AAC9B,CAAC","sourcesContent":["import type { AudioTrack } from '../../../types/model/AudioTrack.js';\nimport type { TextTrack } from '../../../types/model/TextTrack.js';\nimport type { Track } from '../../../types/model/Track.js';\nimport type { VideoTrack } from '../../../types/model/VideoTrack.js';\n\nimport { getPlaylistData } from './utils/getPlaylistData.js';\nimport { getSegments } from './utils/getSegments.js';\n\ntype ManifestPlaylistPiece = {\n\tmainRef: string;\n\tplaylist: string;\n};\n\nexport function generateManifestPlaylistPiece(track: Track): ManifestPlaylistPiece {\n\tconst mediaSequence = 0; //TODO : save mediaSequence in the model.\n\tconst trackFileName = track.fileName ?? `${track.id}.m3u8`;\n\n\tlet mainRef = '';\n\tlet playlist = `#EXTM3U\\n#EXT-X-TARGETDURATION:${track.duration / track.segments.length}\\n#EXT-X-PLAYLIST-TYPE:VOD\\n#EXT-X-MEDIA-SEQUENCE:${mediaSequence}\\n`;\n\n\tif (track.type.toLowerCase() === 'video') {\n\t\tconst videoTrack = track as VideoTrack;\n\t\tmainRef += `#EXT-X-STREAM-INF:BANDWIDTH=${videoTrack.bandwidth},CODECS=\"${videoTrack.codec}\",RESOLUTION=${videoTrack.width}x${videoTrack.height}\\n${trackFileName}\\n`;\n\t\tplaylist += getPlaylistData(videoTrack);\n\t}\n\telse if (track.type.toLowerCase() === 'audio') {\n\t\tconst audioTrack = track as AudioTrack;\n\t\tmainRef += `#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID=\"${audioTrack.id}\",LANGUAGE=\"${audioTrack.language}\",NAME=\"${audioTrack.id}\",URI=\"${trackFileName}\"\\n`;\n\t\tplaylist += getPlaylistData(audioTrack);\n\t}\n\telse if (track.type.toLowerCase() === 'text') {\n\t\tconst textTrack = track as TextTrack;\n\t\tmainRef += `#EXT-X-MEDIA:TYPE=SUBTITLES,GROUP-ID=\"${textTrack.id}\",NAME=\"${textTrack.id}\",LANGUAGE=\"${textTrack.language}\",URI=\"${trackFileName}\"\\n`;\n\t}\n\n\tplaylist += `${getSegments(track.segments)}#EXT-X-ENDLIST`;\n\n\treturn { mainRef, playlist };\n}\n"]}