{"version":3,"file":"getSar.js","sourceRoot":"","sources":["../../../../../../../src/cmaf/ham/mapper/dash/mapDashToHam/utils/getSar.ts"],"names":[],"mappings":"AAGA;;;;;;;;GAQG;AACH,MAAM,UAAU,MAAM,CACrB,aAA4B,EAC5B,cAA8B;;IAE9B,MAAM,GAAG,GAAW,MAAA,MAAA,cAAc,CAAC,CAAC,CAAC,GAAG,mCAAI,aAAa,CAAC,CAAC,CAAC,GAAG,mCAAI,EAAE,CAAC;IACtE,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,OAAO,CAAC,KAAK,CAAC,kBAAkB,cAAc,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;IACnE,CAAC;IACD,OAAO,GAAG,CAAC;AACZ,CAAC","sourcesContent":["import type { AdaptationSet } from '../../../../types/mapper/dash/AdaptationSet.js';\nimport type { Representation } from '../../../../types/mapper/dash/Representation.js';\n\n/**\n * @internal\n *\n * Get the sar value. It can be present on adaptationSet or representation.\n *\n * @param adaptationSet - AdaptationSet to try to get the sar from\n * @param representation - AdaptationSet to try to get the sar from\n * @returns sar value. In case it is not present, returns empty string.\n */\nexport function getSar(\n\tadaptationSet: AdaptationSet,\n\trepresentation: Representation,\n): string {\n\tconst sar: string = representation.$.sar ?? adaptationSet.$.sar ?? '';\n\tif (!sar) {\n\t\tconsole.error(`Representation ${representation.$.id} has no sar`);\n\t}\n\treturn sar;\n}\n"]}