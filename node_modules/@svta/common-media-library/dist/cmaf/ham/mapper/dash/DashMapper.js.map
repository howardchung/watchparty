{"version":3,"file":"DashMapper.js","sourceRoot":"","sources":["../../../../../src/cmaf/ham/mapper/dash/DashMapper.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,gCAAgC,CAAC;AAE9D,OAAO,EAAE,iBAAiB,EAAE,MAAM,uCAAuC,CAAC;AAC1E,OAAO,EAAE,iBAAiB,EAAE,MAAM,2CAA2C,CAAC;AAC9E,OAAO,EAAE,WAAW,EAAE,MAAM,qCAAqC,CAAC;AAIlE,MAAM,OAAO,UAAU;IAGtB,mBAAmB;QAClB,OAAO,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,QAAkB;QACvB,MAAM,YAAY,GAA6B,iBAAiB,CAC/D,QAAQ,CAAC,QAAQ,CACjB,CAAC;QAEF,IAAI,CAAC,YAAY,EAAE,CAAC;YACnB,OAAO,EAAE,CAAC;QACX,CAAC;QACD,iBAAiB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QAE1C,OAAO,YAAY,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,YAA4B;QACtC,MAAM,QAAQ,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;QAC5C,OAAO,EAAE,QAAQ,EAAE,kBAAkB,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAC3D,CAAC;CACD","sourcesContent":["import type { Manifest } from '../../types/manifest/Manifest.js';\nimport type { DashManifest } from '../../types/mapper/dash/DashManifest.js';\nimport type { Presentation } from '../../types/model/Presentation.js';\n\nimport { mapDashToHam } from './mapDashToHam/mapDashToHam.js';\nimport { mapHamToDash } from './mapHamToDash/mapHamToDash.js';\n\nimport { parseDashManifest } from '../../utils/dash/parseDashManifest.js';\nimport { addMetadataToDash } from '../../utils/manifest/addMetadataToDash.js';\nimport { getMetadata } from '../../utils/manifest/getMetadata.js';\n\nimport type { Mapper } from '../Mapper.js';\n\nexport class DashMapper implements Mapper {\n\tprivate manifest: Manifest | undefined;\n\n\tgetManifestMetadata(): JSON | undefined {\n\t\treturn getMetadata(this.manifest);\n\t}\n\n\ttoHam(manifest: Manifest): Presentation[] {\n\t\tconst dashManifest: DashManifest | undefined = parseDashManifest(\n\t\t\tmanifest.manifest,\n\t\t);\n\n\t\tif (!dashManifest) {\n\t\t\treturn [];\n\t\t}\n\t\taddMetadataToDash(dashManifest, manifest);\n\n\t\treturn mapDashToHam(dashManifest);\n\t}\n\n\ttoManifest(presentation: Presentation[]): Manifest {\n\t\tconst manifest = mapHamToDash(presentation);\n\t\treturn { manifest, ancillaryManifests: [], type: 'dash' };\n\t}\n}\n"]}