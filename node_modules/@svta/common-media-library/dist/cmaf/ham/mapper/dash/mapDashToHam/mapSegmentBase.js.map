{"version":3,"file":"mapSegmentBase.js","sourceRoot":"","sources":["../../../../../../src/cmaf/ham/mapper/dash/mapDashToHam/mapSegmentBase.ts"],"names":[],"mappings":"AAKA;;;;;;;;GAQG;AACH,MAAM,UAAU,cAAc,CAC7B,cAA8B,EAC9B,QAAgB;IAEhB,OAAO,cAAc,CAAC,WAAY,CAAC,GAAG,CAAC,CAAC,OAAoB,EAAE,EAAE;;QAC/D,OAAO;YACN,QAAQ;YACR,GAAG,EAAE,MAAA,cAAc,CAAC,OAAQ,CAAC,CAAC,CAAC,mCAAI,EAAE;YACrC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,UAAU;SACpB,CAAC;IACd,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { Representation } from '../../../types/mapper/dash/Representation.js';\nimport type { SegmentBase } from '../../../types/mapper/dash/SegmentBase.js';\n\nimport type { Segment } from '../../../types/model/Segment.js';\n\n/**\n * @internal\n *\n * Maps SegmentBase from dash to Segment list from ham.\n *\n * @param representation - Representation to get the SegmentBase from\n * @param duration - Duration of the segment\n * @returns list of ham segments\n */\nexport function mapSegmentBase(\n\trepresentation: Representation,\n\tduration: number,\n): Segment[] {\n\treturn representation.SegmentBase!.map((segment: SegmentBase) => {\n\t\treturn {\n\t\t\tduration,\n\t\t\turl: representation.BaseURL![0] ?? '',\n\t\t\tbyteRange: segment.$.indexRange,\n\t\t} as Segment;\n\t});\n}\n"]}