{"version":3,"file":"validateTrack.js","sourceRoot":"","sources":["../../../../../src/cmaf/ham/services/validators/validateTrack.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AudioTrack } from '../../types/model/AudioTrack.js';\nimport type { TextTrack } from '../../types/model/TextTrack.js';\nimport type { Track } from '../../types/model/Track.js';\nimport type { VideoTrack } from '../../types/model/VideoTrack.js';\n\nimport type { Validation } from '../../types/Validation.js';\n\nimport { validateSegments } from './validateSegments.js';\n\n/**\n * Validate a track.\n * It validates in cascade, calling each child validation method.\n *\n * Validations:\n * - track has id\n * - Invokes specific audio, video and text validations\n *\n * @example\n * ```ts\n * import cmaf, { Track } from '@svta/common-media-library/cmaf-ham';\n * ...\n *\n * // const track: Track = ...;\n *\n * const validation = cmaf.validateTrack(track);\n * ```\n *\n * Example output: `{ status: true|false, errorMessages: [...] }`\n *\n * @param track - Track from cmaf ham model\n * @param switchingSetId - Optional: parent switching set id\n * @param prevValidation - Optional: validation object from parent previous validate method call\n * @returns Validation\n *\n * @group CMAF\n * @alpha\n *\n */\nexport function validateTrack(\n\ttrack: Track,\n\tswitchingSetId?: string,\n\tprevValidation?: Validation,\n): Validation {\n\tconst validation: Validation = prevValidation ?? {\n\t\tstatus: true,\n\t\terrorMessages: [],\n\t};\n\tconst moreInformation = switchingSetId\n\t\t? ` in the switching set with id = ${switchingSetId}`\n\t\t: '.';\n\n\tif (!track.id) {\n\t\tvalidation.status = false;\n\t\tvalidation.errorMessages.push(\n\t\t\t`Track id is undefined${moreInformation}`,\n\t\t);\n\t}\n\n\tswitch (track.type) {\n\t\tcase 'video':\n\t\t\t_validateVideoTrack(\n\t\t\t\ttrack as VideoTrack,\n\t\t\t\tswitchingSetId,\n\t\t\t\tvalidation,\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'audio':\n\t\t\t_validateAudioTrack(\n\t\t\t\ttrack as AudioTrack,\n\t\t\t\tswitchingSetId,\n\t\t\t\tvalidation,\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'text':\n\t\t\t_validateTextTrack(track as TextTrack, switchingSetId, validation);\n\t\t\tbreak;\n\t}\n\n\tvalidateSegments(track.segments, track.id, validation);\n\n\treturn validation;\n}\n\n/**\n * @internal\n *\n * Validate video Track\n *\n * Validations:\n * - track has codec\n *\n * @param videoTrack - Video track to validate\n * @param switchingSetId - Optional: id from the switching set containing the track (Only used for logs)\n * @param prevValidation - Optional: validation object from parent previous validate method call\n * @returns Validation object\n * @see Validation\n */\nfunction _validateVideoTrack(\n\tvideoTrack: VideoTrack,\n\tswitchingSetId?: string,\n\tprevValidation?: Validation,\n): Validation {\n\tconst validation: Validation = prevValidation ?? {\n\t\tstatus: true,\n\t\terrorMessages: [],\n\t};\n\tconst moreInformation = switchingSetId\n\t\t? ` in the switching set with id = ${switchingSetId}`\n\t\t: '.';\n\n\tif (!videoTrack.codec) {\n\t\tvalidation.status = false;\n\t\tvalidation.errorMessages.push(\n\t\t\t`VideoTrack with id: ${videoTrack.id} does not have codec${moreInformation}`,\n\t\t);\n\t}\n\n\treturn validation;\n}\n\n/**\n * @internal\n *\n * Validate Audio Track\n *\n * Validations:\n * - track has codec\n *\n * @param audioTrack - Audio track to validate\n * @param switchingSetId - Optional: id from the switching set containing the track (Only used for logs)\n * @param prevValidation - Optional: validation object from parent previous validate method call\n * @returns Validation object\n * @see Validation\n */\nfunction _validateAudioTrack(\n\taudioTrack: AudioTrack,\n\tswitchingSetId?: string,\n\tprevValidation?: Validation,\n): Validation {\n\tconst validation: Validation = prevValidation ?? {\n\t\tstatus: true,\n\t\terrorMessages: [],\n\t};\n\tconst moreInformation = switchingSetId\n\t\t? ` in the switching set with id = ${switchingSetId}`\n\t\t: '.';\n\n\tif (!audioTrack.codec) {\n\t\tvalidation.status = false;\n\t\tvalidation.errorMessages.push(\n\t\t\t`AudioTrack with id: ${audioTrack.id} does not have codec${moreInformation}`,\n\t\t);\n\t}\n\n\treturn validation;\n}\n\n/**\n * @internal\n *\n * Validate Text Track\n *\n * Validations:\n * - track has language\n *\n * @param textTrack - Text track to validate\n * @param switchingSetId - Optional: id from the switching set containing the track (Only used for logs)\n * @param prevValidation - Optional: validation object from parent previous validate method call\n * @returns Validation object\n * @see Validation\n */\nfunction _validateTextTrack(\n\ttextTrack: TextTrack,\n\tswitchingSetId?: string,\n\tprevValidation?: Validation,\n): Validation {\n\tconst validation: Validation = prevValidation ?? {\n\t\tstatus: true,\n\t\terrorMessages: [],\n\t};\n\tconst moreInformation = switchingSetId\n\t\t? ` in the switching set with id = ${switchingSetId}`\n\t\t: '.';\n\n\tif (!textTrack.language) {\n\t\tvalidation.status = false;\n\t\tvalidation.errorMessages.push(\n\t\t\t`TextTrack with id: ${textTrack.id} does not have codec${moreInformation}`,\n\t\t);\n\t}\n\n\treturn validation;\n}\n"]}