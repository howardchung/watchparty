{"version":3,"file":"getTracksFromSelectionSet.js","sourceRoot":"","sources":["../../../../../src/cmaf/ham/services/getters/getTracksFromSelectionSet.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAC;AAE3E;;;;;;;;;GASG;AACH,MAAM,UAAU,yBAAyB,CACxC,YAA0B,EAC1B,SAAqC;IAErC,MAAM,MAAM,GAAG,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAClE,yBAAyB,CAAC,YAAY,CAAC,CACvC,CAAC;IACF,OAAO,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACtD,CAAC","sourcesContent":["import type { SelectionSet } from '../../types/model/SelectionSet.js';\nimport type { Track } from '../../types/model/Track.js';\n\nimport { getTracksFromSwitchingSet } from './getTracksFromSwitchingSet.js';\n\n/**\n * Get a list of Tracks contained on a SelectionSet\n *\n * @param selectionSet - SelectionSet object from HAM\n * @param predicate - Filtering function\n * @returns Track[]\n *\n * @group CMAF\n * @alpha\n */\nexport function getTracksFromSelectionSet(\n\tselectionSet: SelectionSet,\n\tpredicate?: (track: Track) => boolean,\n): Track[] {\n\tconst tracks = selectionSet.switchingSets.flatMap((switchingSet) =>\n\t\tgetTracksFromSwitchingSet(switchingSet),\n\t);\n\treturn predicate ? tracks.filter(predicate) : tracks;\n}\n"]}