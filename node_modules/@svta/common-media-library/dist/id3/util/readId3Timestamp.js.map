{"version":3,"file":"readId3Timestamp.js","sourceRoot":"","sources":["../../../src/id3/util/readId3Timestamp.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;GAUG;AACH,MAAM,UAAU,gBAAgB,CAC/B,cAA4C;IAE5C,IAAI,cAAc,CAAC,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE,CAAC;QAC1C,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACjD,oEAAoE;QACpE,sCAAsC;QACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC/B,IAAI,SAAS,GACZ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,SAAS,IAAI,EAAE,CAAC;QAEhB,IAAI,QAAQ,EAAE,CAAC;YACd,SAAS,IAAI,WAAW,CAAC;QAC1B,CAAC,CAAC,YAAY;QAEd,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAED,OAAO,SAAS,CAAC;AAClB,CAAC","sourcesContent":["import type { DecodedId3Frame } from '../DecodedId3Frame.js';\n\n/**\n * Read a 33 bit timestamp from an ID3 frame.\n *\n * @param timeStampFrame - the ID3 frame\n *\n * @returns The timestamp\n *\n * @internal\n *\n * @group ID3\n */\nexport function readId3Timestamp(\n\ttimeStampFrame: DecodedId3Frame<ArrayBuffer>,\n): number | undefined {\n\tif (timeStampFrame.data.byteLength === 8) {\n\t\tconst data = new Uint8Array(timeStampFrame.data);\n\t\t// timestamp is 33 bit expressed as a big-endian eight-octet number,\n\t\t// with the upper 31 bits set to zero.\n\t\tconst pts33Bit = data[3] & 0x1;\n\t\tlet timestamp =\n\t\t\t(data[4] << 23) + (data[5] << 15) + (data[6] << 7) + data[7];\n\t\ttimestamp /= 45;\n\n\t\tif (pts33Bit) {\n\t\t\ttimestamp += 47721858.84;\n\t\t} // 2^32 / 90\n\n\t\treturn Math.round(timestamp);\n\t}\n\n\treturn undefined;\n}\n"]}