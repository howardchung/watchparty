{"version":3,"file":"decodeId3UrlFrame.js","sourceRoot":"","sources":["../../../src/id3/util/decodeId3UrlFrame.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAI/D;;;;;;;;;;GAUG;AACH,MAAM,UAAU,iBAAiB,CAAC,KAAkB;IACnD,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;QAC3B;;;;UAIE;QACF,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC;YACpB,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,WAAW,GAAW,cAAc,CACzC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAC1B,IAAI,CACJ,CAAC;QAEF,KAAK,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;QAChC,MAAM,KAAK,GAAW,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjE,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IAC5D,CAAC;IACD;;;MAGE;IACF,MAAM,GAAG,GAAW,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/C,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;AACjD,CAAC","sourcesContent":["import { utf8ArrayToStr } from '../../utils/utf8ArrayToStr.js';\nimport type { DecodedId3Frame } from '../DecodedId3Frame.js';\nimport type { RawId3Frame } from './RawFrame.js';\n\n/**\n * Decode a URL frame\n *\n * @param frame - the ID3 URL frame\n *\n * @returns The decoded ID3 URL frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function decodeId3UrlFrame(frame: RawId3Frame): DecodedId3Frame<string> | undefined {\n\tif (frame.type === 'WXXX') {\n\t\t/*\n\t\tFormat:\n\t\t[0]   = {Text Encoding}\n\t\t[1-?] = {Description}\\0{URL}\n\t\t*/\n\t\tif (frame.size < 2) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet index = 1;\n\t\tconst description: string = utf8ArrayToStr(\n\t\t\tframe.data.subarray(index),\n\t\t\ttrue,\n\t\t);\n\n\t\tindex += description.length + 1;\n\t\tconst value: string = utf8ArrayToStr(frame.data.subarray(index));\n\n\t\treturn { key: frame.type, info: description, data: value };\n\t}\n\t/*\n\tFormat:\n\t[0-?] = {URL}\n\t*/\n\tconst url: string = utf8ArrayToStr(frame.data);\n\treturn { key: frame.type, info: '', data: url };\n}\n"]}