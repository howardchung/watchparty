{"version":3,"file":"getId3FrameData.js","sourceRoot":"","sources":["../../../src/id3/util/getId3FrameData.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAE/C;;;;;;;;;;GAUG;AACH,MAAM,UAAU,eAAe,CAAC,IAAgB;IAC/C;;;;MAIE;IACF,MAAM,IAAI,GAAW,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,MAAM,IAAI,GAAW,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAE1C,iCAAiC;IACjC,MAAM,MAAM,GAAG,EAAE,CAAC;IAElB,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;AACnE,CAAC","sourcesContent":["import type { RawId3Frame } from './RawFrame.js';\nimport { readId3Size } from './readId3Size.js';\n\n/**\n * Returns the data of an ID3 frame.\n *\n * @param data - The data to read from\n *\n * @returns The data of the ID3 frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function getId3FrameData(data: Uint8Array): RawId3Frame {\n\t/*\n\tFrame ID       $xx xx xx xx (four characters)\n\tSize           $xx xx xx xx\n\tFlags          $xx xx\n\t*/\n\tconst type: string = String.fromCharCode(data[0], data[1], data[2], data[3]);\n\tconst size: number = readId3Size(data, 4);\n\n\t// skip frame id, size, and flags\n\tconst offset = 10;\n\n\treturn { type, size, data: data.subarray(offset, offset + size) };\n}\n"]}