{"version":3,"file":"filterBoxesByType.js","sourceRoot":"","sources":["../../../src/iso/bmff/filterBoxesByType.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAI/C;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,iBAAiB,CAAC,IAAY,EAAE,GAAY,EAAE,SAAwB,EAAE;IACvF,OAAO,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;AAC3D,CAAC","sourcesContent":["import type { Box } from './Box.js';\nimport { filterBoxes } from './filterBoxes.js';\nimport type { IsoData } from './IsoData.js';\nimport type { IsoViewConfig } from './IsoViewConfig.js';\n\n/**\n * Filter boxes by type from an IsoView\n *\n * @param type - The type of boxes to filter\n * @param raw - The raw ISO data\n * @param config - The configuration for the IsoView\n *\n * @returns The filtered boxes\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function filterBoxesByType(type: string, raw: IsoData, config: IsoViewConfig = {}): Box[] {\n\treturn filterBoxes(raw, config, box => box.type === type);\n}\n"]}