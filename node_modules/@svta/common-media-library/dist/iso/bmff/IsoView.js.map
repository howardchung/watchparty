{"version":3,"file":"IsoView.js","sourceRoot":"","sources":["../../../src/iso/bmff/IsoView.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Box } from './Box.js';\nimport { ContainerBoxes } from './ContainerBoxes.js';\nimport { DATA } from './fields/DATA.js';\nimport { INT } from './fields/INT.js';\nimport { STRING } from './fields/STRING.js';\nimport { TEMPLATE } from './fields/TEMPLATE.js';\nimport { UINT } from './fields/UINT.js';\nimport { UTF8 } from './fields/UTF8.js';\nimport type { FullBox } from './FullBox.js';\nimport type { IsoViewConfig } from './IsoViewConfig.js';\nimport type { ISOFieldTypeMap } from './readers/ISOFieldTypeMap.js';\nimport { readData } from './readers/readData.js';\nimport { readInt } from './readers/readInt.js';\nimport { readString } from './readers/readString.js';\nimport { readTemplate } from './readers/readTemplate.js';\nimport { readTerminatedString } from './readers/readTerminatedString.js';\nimport { readUint } from './readers/readUint.js';\nimport { readUTF8String } from './readers/readUTF8String.js';\nimport { readUTF8TerminatedString } from './readers/readUTF8TerminatedString.js';\n\n/**\n * Raw ISO BMFF data box.\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type RawBox = {\n\ttype: string;\n\tsize: number;\n\tlargesize?: number;\n\tusertype?: number[];\n\tdata: IsoView;\n};\n\n/**\n * ISO BMFF data view. Similar to DataView, but with additional methods for reading ISO BMFF data.\n * It implements the iterator protocol, so it can be used in a for...of loop.\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport class IsoView {\n\tprivate dataView: DataView;\n\tprivate offset: number;\n\tprivate config: IsoViewConfig;\n\tprivate truncated: boolean = false;\n\n\tconstructor(raw: ArrayBuffer | DataView | Uint8Array, config?: IsoViewConfig) {\n\t\tthis.dataView = (raw instanceof ArrayBuffer) ? new DataView(raw) : (raw instanceof Uint8Array) ? new DataView(raw.buffer, raw.byteOffset, raw.byteLength) : raw;\n\t\tthis.offset = this.dataView.byteOffset;\n\t\tthis.config = config || { recursive: false, parsers: {} };\n\t}\n\n\tget cursor(): number {\n\t\treturn this.offset - this.dataView.byteOffset;\n\t}\n\n\tget done(): boolean {\n\t\treturn this.cursor >= this.dataView.byteLength || this.truncated;\n\t}\n\n\tget bytesRemaining(): number {\n\t\treturn this.dataView.byteLength - this.cursor;\n\t}\n\n\tslice = (size: number): IsoView => {\n\t\tconst dataView = new DataView(this.dataView.buffer, this.offset, size);\n\t\tthis.offset += size;\n\t\treturn new IsoView(dataView, this.config);\n\t};\n\n\tprivate read = <T extends keyof ISOFieldTypeMap>(type: T, size: number = 0): ISOFieldTypeMap[T] => {\n\t\t// TODO: Change all sizes from bits to bytes\n\t\tconst { dataView, offset } = this;\n\n\t\tlet result: any;\n\t\tlet cursor = size;\n\n\t\tswitch (type) {\n\t\t\tcase UINT:\n\t\t\t\tresult = readUint(dataView, offset, size);\n\t\t\t\tbreak;\n\n\t\t\tcase INT:\n\t\t\t\tresult = readInt(dataView, offset, size);\n\t\t\t\tbreak;\n\n\t\t\tcase TEMPLATE:\n\t\t\t\tresult = readTemplate(dataView, offset, size);\n\t\t\t\tbreak;\n\n\t\t\tcase STRING:\n\t\t\t\tif (size === -1) {\n\t\t\t\t\tresult = readTerminatedString(dataView, offset);\n\t\t\t\t\tcursor = result.length + 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = readString(dataView, offset, size);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase DATA:\n\t\t\t\tresult = readData(dataView, offset, size);\n\t\t\t\tcursor = result.length;\n\t\t\t\tbreak;\n\n\t\t\tcase UTF8:\n\t\t\t\tif (size === -1) {\n\t\t\t\t\tresult = readUTF8TerminatedString(dataView, offset);\n\t\t\t\t\tcursor = result.length + 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = readUTF8String(dataView, offset);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tresult = -1;\n\t\t}\n\n\t\tthis.offset += cursor;\n\n\t\treturn result;\n\t};\n\n\treadUint = (size: number): number => {\n\t\treturn this.read(UINT, size);\n\t};\n\n\treadInt = (size: number): number => {\n\t\treturn this.read(INT, size);\n\t};\n\n\treadString = (size: number): string => {\n\t\treturn this.read(STRING, size);\n\t};\n\n\treadTemplate = (size: number): number => {\n\t\treturn this.read(TEMPLATE, size);\n\t};\n\n\treadData = (size: number): Uint8Array => {\n\t\treturn this.read(DATA, size);\n\t};\n\n\treadUtf8 = (size?: number): string => {\n\t\treturn this.read(UTF8, size);\n\t};\n\n\treadFullBox = (): FullBox => {\n\t\treturn {\n\t\t\tversion: this.readUint(1),\n\t\t\tflags: this.readUint(3),\n\t\t};\n\t};\n\n\treadArray = <T extends keyof ISOFieldTypeMap>(type: T, size: number, length: number): ISOFieldTypeMap[T][] => {\n\t\tconst value = [];\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tvalue.push(this.read(type, size));\n\t\t}\n\n\t\treturn value as ISOFieldTypeMap[T][];\n\t};\n\n\treadBox = (): RawBox => {\n\t\tconst { dataView, offset } = this;\n\n\t\t// read box size and type without advancing the cursor in case the box is truncated\n\t\tlet cursor = 0;\n\n\t\tconst box = {\n\t\t\tsize: readUint(dataView, offset, 4),\n\t\t\ttype: readString(dataView, offset + 4, 4),\n\t\t} as RawBox;\n\n\t\tcursor += 8;\n\n\t\tif (box.size === 1) {\n\t\t\tbox.largesize = readUint(dataView, offset + cursor, 8);\n\t\t\tcursor += 8;\n\t\t}\n\n\t\tconst actualSize = box.largesize || box.size;\n\t\tif (this.cursor + actualSize > dataView.byteLength) {\n\t\t\tthis.truncated = true;\n\t\t\tthrow new Error('Truncated box');\n\t\t}\n\n\t\tthis.offset += cursor;\n\t\tif (box.type === 'uuid') {\n\t\t\tbox.usertype = this.readArray('uint', 1, 16);\n\t\t}\n\n\t\tconst viewSize = box.size === 0 ? this.bytesRemaining : actualSize - cursor;\n\t\tbox.data = this.slice(viewSize);\n\n\t\treturn box;\n\t};\n\n\treadBoxes = (length: number): Box[] => {\n\t\tconst result: Box[] = [];\n\n\t\tfor (const box of this) {\n\t\t\tresult.push(box);\n\n\t\t\tif (length > 0 && result.length >= length) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treadEntries = <T>(length: number, map: () => T): T[] => {\n\t\tconst result: T[] = [];\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult.push(map());\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t*[Symbol.iterator](): Generator<Box> {\n\t\tconst { parsers = {}, recursive = false } = this.config;\n\n\t\twhile (!this.done) {\n\t\t\ttry {\n\t\t\t\tconst { type, data, ...rest } = this.readBox();\n\t\t\t\tconst box = { type, ...rest } as Box;\n\t\t\t\tconst parser = parsers[type] || parsers[type.trim()]; // url and urn boxes have a trailing space in their type field\n\t\t\t\tif (parser) {\n\t\t\t\t\tObject.assign(box, parser(data, this.config));\n\t\t\t\t}\n\n\t\t\t\tif (ContainerBoxes.includes(type)) {\n\t\t\t\t\tconst boxes = [];\n\n\t\t\t\t\tfor (const child of data) {\n\t\t\t\t\t\tif (recursive) {\n\t\t\t\t\t\t\tyield child;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboxes.push(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tbox.boxes = boxes;\n\t\t\t\t}\n\n\t\t\t\tyield box;\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}