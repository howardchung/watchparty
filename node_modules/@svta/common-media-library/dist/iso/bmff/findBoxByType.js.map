{"version":3,"file":"findBoxByType.js","sourceRoot":"","sources":["../../../src/iso/bmff/findBoxByType.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAIvC;;;;;;;;;;;;GAYG;AACH,MAAM,UAAU,aAAa,CAAC,IAAY,EAAE,GAAY,EAAE,SAAwB,EAAE;IACnF,OAAO,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;AACvD,CAAC","sourcesContent":["import type { Box } from './Box.js';\nimport { findBox } from './findBox.js';\nimport type { IsoData } from './IsoData.js';\nimport type { IsoViewConfig } from './IsoViewConfig.js';\n\n/**\n * Find a box from an IsoView that matches a given type\n *\n * @param type - The type of box to find\n * @param raw - The raw ISO data\n * @param config - The configuration for the IsoView\n *\n * @returns The first box that matches the type\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function findBoxByType(type: string, raw: IsoData, config: IsoViewConfig = {}): Box | null {\n\treturn findBox(raw, config, box => box.type === type);\n}\n"]}