{"version":3,"file":"mehd.js","sourceRoot":"","sources":["../../../../src/iso/bmff/parsers/mehd.ts"],"names":[],"mappings":"AAcA;;;;;;;;;;GAUG;AACH,MAAM,UAAU,IAAI,CAAC,IAAa;IACjC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAE9C,OAAO;QACN,OAAO;QACP,KAAK;QACL,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACxD,CAAC;AACH,CAAC;AAAA,CAAC","sourcesContent":["import type { FullBox } from '../FullBox.js';\nimport type { IsoView } from '../IsoView.js';\n\n/**\n * ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type MovieExtendsHeaderBox = FullBox & {\n\tfragmentDuration: number;\n};\n\n/**\n * Parse a MovieExtendsHeaderBox from an IsoView\n *\n * @param view - The IsoView to read data from\n *\n * @returns A parsed MovieExtendsHeaderBox\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function mehd(view: IsoView): MovieExtendsHeaderBox {\n\tconst { version, flags } = view.readFullBox();\n\n\treturn {\n\t\tversion,\n\t\tflags,\n\t\tfragmentDuration: view.readUint((version === 1) ? 8 : 4),\n\t};\n};\n"]}