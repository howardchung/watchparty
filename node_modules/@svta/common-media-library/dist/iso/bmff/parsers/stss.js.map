{"version":3,"file":"stss.js","sourceRoot":"","sources":["../../../../src/iso/bmff/parsers/stss.ts"],"names":[],"mappings":"AA0BA;;;;;;;;;;GAUG;AACH,MAAM,UAAU,IAAI,CAAC,IAAa;IACjC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAEpC,OAAO;QACN,OAAO;QACP,KAAK;QACL,UAAU;QACV,OAAO,EAAE,IAAI,CAAC,WAAW,CAAa,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;YACxD,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC9B,CAAC,CAAC;KACH,CAAC;AACH,CAAC;AAAA,CAAC","sourcesContent":["import type { FullBox } from '../FullBox.js';\nimport type { IsoView } from '../IsoView.js';\n\n/**\n * Sync sample\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type SyncSample = {\n\tsampleNumber: number;\n};\n\n/**\n * ISO/IEC 14496-12:2015 - 8.6.2 Sync Sample Box\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport type SyncSampleBox = FullBox & {\n\tentryCount: number;\n\tentries: SyncSample[];\n};\n\n/**\n * Parse a SyncSampleBox from an IsoView\n *\n * @param view - The IsoView to read data from\n *\n * @returns A parsed SyncSampleBox\n *\n * @group ISOBMFF\n *\n * @beta\n */\nexport function stss(view: IsoView): SyncSampleBox {\n\tconst { version, flags } = view.readFullBox();\n\tconst entryCount = view.readUint(4);\n\n\treturn {\n\t\tversion,\n\t\tflags,\n\t\tentryCount,\n\t\tentries: view.readEntries<SyncSample>(entryCount, () => ({\n\t\t\tsampleNumber: view.readUint(4),\n\t\t})),\n\t};\n};\n"]}