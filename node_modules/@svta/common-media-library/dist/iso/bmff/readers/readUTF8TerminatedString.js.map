{"version":3,"file":"readUTF8TerminatedString.js","sourceRoot":"","sources":["../../../../src/iso/bmff/readers/readUTF8TerminatedString.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AAEtE,MAAM,UAAU,wBAAwB,CAAC,QAAkB,EAAE,MAAc;IAC1E,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;IAEpE,IAAI,IAAI,GAAG,EAAE,CAAC;IAEd,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;QAChB,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAE3D,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC5B,MAAM;YACP,CAAC;QACF,CAAC;QAED,4CAA4C;QAC5C,IAAI,GAAG,gBAAgB,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAAA,CAAC","sourcesContent":["import { dataViewToString } from '../../../utils/dataViewToString.js';\n\nexport function readUTF8TerminatedString(dataView: DataView, offset: number): string {\n\tconst length = dataView.byteLength - (offset - dataView.byteOffset);\n\n\tlet data = '';\n\n\tif (length > 0) {\n\t\tconst view = new DataView(dataView.buffer, offset, length);\n\n\t\tlet l = 0;\n\n\t\tfor (; l < length; l++) {\n\t\t\tif (view.getUint8(l) === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// remap the Dataview with the actual length\n\t\tdata = dataViewToString(new DataView(dataView.buffer, offset, l));\n\t}\n\n\treturn data;\n};\n"]}