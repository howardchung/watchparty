{"version":3,"file":"readUTF8String.js","sourceRoot":"","sources":["../../../../src/iso/bmff/readers/readUTF8String.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AAEtE,MAAM,UAAU,cAAc,CAAC,QAAkB,EAAE,MAAc;IAChE,MAAM,MAAM,GAAG,QAAQ,CAAC,UAAU,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;IACpE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAC5F,CAAC;AAAA,CAAC","sourcesContent":["import { dataViewToString } from '../../../utils/dataViewToString.js';\n\nexport function readUTF8String(dataView: DataView, offset: number): string {\n\tconst length = dataView.byteLength - (offset - dataView.byteOffset);\n\treturn (length > 0) ? dataViewToString(new DataView(dataView.buffer, offset, length)) : '';\n};\n"]}