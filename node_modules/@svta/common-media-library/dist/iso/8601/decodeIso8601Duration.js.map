{"version":3,"file":"decodeIso8601Duration.js","sourceRoot":"","sources":["../../../src/iso/8601/decodeIso8601Duration.ts"],"names":[],"mappings":"AAAA,MAAM,QAAQ,GAAG,iGAAiG,CAAC;AAEnH,MAAM,eAAe,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC3C,MAAM,gBAAgB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC3C,MAAM,cAAc,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACpC,MAAM,eAAe,GAAG,EAAE,GAAG,EAAE,CAAC;AAChC,MAAM,cAAc,GAAG,EAAE,CAAC;AAE1B;;;;;;;;;;;GAWG;AACH,MAAM,UAAU,qBAAqB,CAAC,WAAmB;IACxD,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzC,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,MAAM,QAAQ,GACb,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,eAAe;QACvC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,gBAAgB;QACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,cAAc;QACtC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,eAAe;QACvC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,cAAc;QACtC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAEvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QACzB,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AACtD,CAAC","sourcesContent":["const DURATION = /^([-])?P(?:([\\d.]*)Y)?(?:([\\d.]*)M)?(?:([\\d.]*)D)?T?(?:([\\d.]*)H)?(?:([\\d.]*)M)?(?:([\\d.]*)S)?$/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\n/**\n * Decode an ISO 8601 duration string into seconds.\n *\n * @param isoDuration - ISO 8601 duration string.\n * @returns Duration in seconds.\n *\n * @group ISO 8601\n * @beta\n *\n * @example\n * {@includeCode ../../../test/iso/8601/decodeIso8601Duration.test.ts#example}\n */\nexport function decodeIso8601Duration(isoDuration: string): number {\n\tconst match = DURATION.exec(isoDuration);\n\n\tif (!match) {\n\t\treturn NaN;\n\t}\n\n\tconst duration =\n\t\tNumber(match[2] || 0) * SECONDS_IN_YEAR +\n\t\tNumber(match[3] || 0) * SECONDS_IN_MONTH +\n\t\tNumber(match[4] || 0) * SECONDS_IN_DAY +\n\t\tNumber(match[5] || 0) * SECONDS_IN_HOUR +\n\t\tNumber(match[6] || 0) * SECONDS_IN_MIN +\n\t\tNumber(match[7] || 0);\n\n\tif (!isFinite(duration)) {\n\t\treturn NaN;\n\t}\n\n\treturn match[1] === undefined ? duration : -duration;\n}\n"]}