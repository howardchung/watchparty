{"version":3,"file":"Cta608Parser.js","sourceRoot":"","sources":["../../../src/cta/608/Cta608Parser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { CaptionsLogger } from './CaptionsLogger.js';\nimport type { Channels } from './Channels.js';\nimport type { CmdHistory } from './CmdHistory.js';\nimport { Cta608Channel } from './Cta608Channel.js';\nimport type { PACData } from './PACData.js';\nimport type { PenStyles } from './PenStyles.js';\nimport type { SupportedField } from './SupportedField.js';\nimport { VerboseLevel } from './VerboseLevel.js';\nimport { backgroundColors } from './utils/backgroundColors.js';\nimport { createCmdHistory } from './utils/createCmdHistory.js';\nimport { getCharForByte } from './utils/getCharForByte.js';\nimport { hasCmdRepeated } from './utils/hasCmdRepeated.js';\nimport { numArrayToHexArray } from './utils/numArrayToHexArray.js';\nimport { rowsHighCh1 } from './utils/rowsHighCh1.js';\nimport { rowsHighCh2 } from './utils/rowsHighCh2.js';\nimport { rowsLowCh1 } from './utils/rowsLowCh1.js';\nimport { rowsLowCh2 } from './utils/rowsLowCh2.js';\nimport { setLastCmd } from './utils/setLastCmd.js';\n\n/**\n * CEA-608 caption parser.\n *\n * @group CTA-608\n * @beta\n */\nexport class Cta608Parser {\n\tprivate channels: Array<Cta608Channel | null>;\n\tprivate currentChannel: Channels = 0;\n\tprivate cmdHistory: CmdHistory = createCmdHistory();\n\tprivate logger: CaptionsLogger;\n\tprivate lastTime: number | null = null;\n\n\tconstructor(field: SupportedField, out1: any, out2: any) {\n\t\tconst logger = (this.logger = new CaptionsLogger());\n\t\tthis.channels = [\n\t\t\tnull,\n\t\t\tnew Cta608Channel(field, out1, logger),\n\t\t\tnew Cta608Channel(field + 1, out2, logger),\n\t\t];\n\t}\n\n\t/**\n\t * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n\t *\n\t * @param time - The time in milliseconds\n\t * @param byteList - The list of bytes\n\t */\n\taddData(time: number | null, byteList: number[]): void {\n\t\tthis.lastTime = time;\n\t\tthis.logger.time = time;\n\n\t\tfor (let i = 0; i < byteList.length; i += 2) {\n\t\t\tconst a = byteList[i] & 0x7f;\n\t\t\tconst b = byteList[i + 1] & 0x7f;\n\t\t\tlet cmdFound: boolean = false;\n\t\t\tlet charsFound: number[] | null = null;\n\n\t\t\tif (this.lastTime !== null) {\n\t\t\t\ttime = this.lastTime + 0.5 * i * 1001 / 30000;\n\t\t\t\tthis.logger.time = time;\n\t\t\t}\n\n\t\t\tif (a === 0 && b === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.logger.log(\n\t\t\t\t\tVerboseLevel.DATA,\n\t\t\t\t\t() =>\n\t\t\t\t\t\t'[' +\n\t\t\t\t\t\tnumArrayToHexArray([byteList[i], byteList[i + 1]]) +\n\t\t\t\t\t\t'] -> (' +\n\t\t\t\t\t\tnumArrayToHexArray([a, b]) +\n\t\t\t\t\t\t')',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst cmdHistory = this.cmdHistory;\n\t\t\tconst isControlCode = a >= 0x10 && a <= 0x1f;\n\t\t\tif (isControlCode) {\n\t\t\t\t// Skip redundant control codes\n\t\t\t\tif (hasCmdRepeated(a, b, cmdHistory)) {\n\t\t\t\t\tsetLastCmd(null, null, cmdHistory);\n\t\t\t\t\tthis.logger.log(\n\t\t\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t'Repeated command (' +\n\t\t\t\t\t\t\tnumArrayToHexArray([a, b]) +\n\t\t\t\t\t\t\t') is dropped',\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetLastCmd(a, b, this.cmdHistory);\n\n\t\t\t\tcmdFound = this.parseCmd(a, b);\n\n\t\t\t\tif (!cmdFound) {\n\t\t\t\t\tcmdFound = this.parseMidrow(a, b);\n\t\t\t\t}\n\n\t\t\t\tif (!cmdFound) {\n\t\t\t\t\tcmdFound = this.parsePAC(a, b);\n\t\t\t\t}\n\n\t\t\t\tif (!cmdFound) {\n\t\t\t\t\tcmdFound = this.parseBackgroundAttributes(a, b);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetLastCmd(null, null, cmdHistory);\n\t\t\t}\n\n\t\t\tif (!cmdFound) {\n\t\t\t\tcharsFound = this.parseChars(a, b);\n\t\t\t\tif (charsFound.length) {\n\t\t\t\t\tconst currChNr = this.currentChannel;\n\t\t\t\t\tif (currChNr && currChNr > 0) {\n\t\t\t\t\t\tconst channel = this.channels[currChNr] as Cta608Channel;\n\t\t\t\t\t\tchannel.insertChars(charsFound);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.logger.log(\n\t\t\t\t\t\t\tVerboseLevel.WARNING,\n\t\t\t\t\t\t\t'No channel found yet. TEXT-MODE?',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!cmdFound && !charsFound) {\n\t\t\t\tthis.logger.log(\n\t\t\t\t\tVerboseLevel.WARNING,\n\t\t\t\t\t() =>\n\t\t\t\t\t\t\"Couldn't parse cleaned data \" +\n\t\t\t\t\t\tnumArrayToHexArray([a, b]) +\n\t\t\t\t\t\t' orig: ' +\n\t\t\t\t\t\tnumArrayToHexArray([byteList[i], byteList[i + 1]]),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Parse Command.\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns True if a command was found\n\t */\n\tprivate parseCmd(a: number, b: number): boolean {\n\n\t\tconst cond1 =\n\t\t\t(a === 0x14 || a === 0x1c || a === 0x15 || a === 0x1d) &&\n\t\t\tb >= 0x20 &&\n\t\t\tb <= 0x2f;\n\t\tconst cond2 = (a === 0x17 || a === 0x1f) && b >= 0x21 && b <= 0x23;\n\t\tif (!(cond1 || cond2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst chNr = a === 0x14 || a === 0x15 || a === 0x17 ? 1 : 2;\n\t\tconst channel = this.channels[chNr] as Cta608Channel;\n\n\t\tif (a === 0x14 || a === 0x15 || a === 0x1c || a === 0x1d) {\n\t\t\tif (b === 0x20) {\n\t\t\t\tchannel.ccRCL();\n\t\t\t}\n\t\t\telse if (b === 0x21) {\n\t\t\t\tchannel.ccBS();\n\t\t\t}\n\t\t\telse if (b === 0x22) {\n\t\t\t\tchannel.ccAOF();\n\t\t\t}\n\t\t\telse if (b === 0x23) {\n\t\t\t\tchannel.ccAON();\n\t\t\t}\n\t\t\telse if (b === 0x24) {\n\t\t\t\tchannel.ccDER();\n\t\t\t}\n\t\t\telse if (b === 0x25) {\n\t\t\t\tchannel.ccRU(2);\n\t\t\t}\n\t\t\telse if (b === 0x26) {\n\t\t\t\tchannel.ccRU(3);\n\t\t\t}\n\t\t\telse if (b === 0x27) {\n\t\t\t\tchannel.ccRU(4);\n\t\t\t}\n\t\t\telse if (b === 0x28) {\n\t\t\t\tchannel.ccFON();\n\t\t\t}\n\t\t\telse if (b === 0x29) {\n\t\t\t\tchannel.ccRDC();\n\t\t\t}\n\t\t\telse if (b === 0x2a) {\n\t\t\t\tchannel.ccTR();\n\t\t\t}\n\t\t\telse if (b === 0x2b) {\n\t\t\t\tchannel.ccRTD();\n\t\t\t}\n\t\t\telse if (b === 0x2c) {\n\t\t\t\tchannel.ccEDM();\n\t\t\t}\n\t\t\telse if (b === 0x2d) {\n\t\t\t\tchannel.ccCR();\n\t\t\t}\n\t\t\telse if (b === 0x2e) {\n\t\t\t\tchannel.ccENM();\n\t\t\t}\n\t\t\telse if (b === 0x2f) {\n\t\t\t\tchannel.ccEOC();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// a == 0x17 || a == 0x1F\n\t\t\tchannel.ccTO(b - 0x20);\n\t\t}\n\n\t\tthis.currentChannel = chNr;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse midrow styling command\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns `true` if midrow styling command was found\n\t */\n\tprivate parseMidrow(a: number, b: number): boolean {\n\t\tlet chNr: number = 0;\n\n\t\tif ((a === 0x11 || a === 0x19) && b >= 0x20 && b <= 0x2f) {\n\t\t\tif (a === 0x11) {\n\t\t\t\tchNr = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchNr = 2;\n\t\t\t}\n\n\t\t\tif (chNr !== this.currentChannel) {\n\t\t\t\tthis.logger.log(\n\t\t\t\t\tVerboseLevel.ERROR,\n\t\t\t\t\t'Mismatch channel in midrow parsing',\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst channel = this.channels[chNr];\n\t\t\tif (!channel) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tchannel.ccMIDROW(b);\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t() => 'MIDROW (' + numArrayToHexArray([a, b]) + ')',\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse Preable Access Codes (Table 53).\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns A Boolean that tells if PAC found\n\t */\n\tprivate parsePAC(a: number, b: number): boolean {\n\t\tlet row: number;\n\n\t\tconst case1 =\n\t\t\t((a >= 0x11 && a <= 0x17) || (a >= 0x19 && a <= 0x1f)) &&\n\t\t\tb >= 0x40 &&\n\t\t\tb <= 0x7f;\n\t\tconst case2 = (a === 0x10 || a === 0x18) && b >= 0x40 && b <= 0x5f;\n\t\tif (!(case1 || case2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst chNr: Channels = a <= 0x17 ? 1 : 2;\n\n\t\tif (b >= 0x40 && b <= 0x5f) {\n\t\t\trow = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];\n\t\t}\n\t\telse {\n\t\t\t// 0x60 <= b <= 0x7F\n\t\t\trow = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];\n\t\t}\n\t\tconst channel = this.channels[chNr];\n\t\tif (!channel) {\n\t\t\treturn false;\n\t\t}\n\t\tchannel.setPAC(this.interpretPAC(row, b));\n\t\tthis.currentChannel = chNr;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Interpret the second byte of the pac, and return the information.\n\t *\n\t * @param row - The row number\n\t * @param byte - The second byte\n\t * @returns pacData with style parameters\n\t */\n\tprivate interpretPAC(row: number, byte: number): PACData {\n\t\tlet pacIndex;\n\t\tconst pacData: PACData = {\n\t\t\tcolor: null,\n\t\t\titalics: false,\n\t\t\tindent: null,\n\t\t\tunderline: false,\n\t\t\trow: row,\n\t\t};\n\n\t\tif (byte > 0x5f) {\n\t\t\tpacIndex = byte - 0x60;\n\t\t}\n\t\telse {\n\t\t\tpacIndex = byte - 0x40;\n\t\t}\n\n\t\tpacData.underline = (pacIndex & 1) === 1;\n\t\tif (pacIndex <= 0xd) {\n\t\t\tpacData.color = [\n\t\t\t\t'white',\n\t\t\t\t'green',\n\t\t\t\t'blue',\n\t\t\t\t'cyan',\n\t\t\t\t'red',\n\t\t\t\t'yellow',\n\t\t\t\t'magenta',\n\t\t\t\t'white',\n\t\t\t][Math.floor(pacIndex / 2)];\n\t\t}\n\t\telse if (pacIndex <= 0xf) {\n\t\t\tpacData.italics = true;\n\t\t\tpacData.color = 'white';\n\t\t}\n\t\telse {\n\t\t\tpacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;\n\t\t}\n\t\treturn pacData; // Note that row has zero offset. The spec uses 1.\n\t}\n\n\t/**\n\t * Parse characters.\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n\t */\n\tprivate parseChars(a: number, b: number): number[] {\n\t\tlet channelNr: Channels;\n\t\tlet charCodes: number[] = [];\n\t\tlet charCode1: number | null = null;\n\n\t\tif (a >= 0x19) {\n\t\t\tchannelNr = 2;\n\t\t\tcharCode1 = a - 8;\n\t\t}\n\t\telse {\n\t\t\tchannelNr = 1;\n\t\t\tcharCode1 = a;\n\t\t}\n\t\tif (charCode1 >= 0x11 && charCode1 <= 0x13) {\n\t\t\t// Special character\n\t\t\tlet oneCode: number;\n\t\t\tif (charCode1 === 0x11) {\n\t\t\t\toneCode = b + 0x50;\n\t\t\t}\n\t\t\telse if (charCode1 === 0x12) {\n\t\t\t\toneCode = b + 0x70;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toneCode = b + 0x90;\n\t\t\t}\n\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.INFO,\n\t\t\t\t() =>\n\t\t\t\t\t\"Special char '\" +\n\t\t\t\t\tgetCharForByte(oneCode) +\n\t\t\t\t\t\"' in channel \" +\n\t\t\t\t\tchannelNr,\n\t\t\t);\n\t\t\tcharCodes = [oneCode];\n\t\t}\n\t\telse if (a >= 0x20 && a <= 0x7f) {\n\t\t\tcharCodes = b === 0 ? [a] : [a, b];\n\t\t}\n\t\tif (charCodes) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t() => 'Char codes =  ' + numArrayToHexArray(charCodes).join(','),\n\t\t\t);\n\t\t}\n\t\treturn charCodes;\n\t}\n\n\t/**\n\t * Parse extended background attributes as well as new foreground color black.\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns True if background attributes are found\n\t */\n\tprivate parseBackgroundAttributes(a: number, b: number): boolean {\n\t\tconst case1 = (a === 0x10 || a === 0x18) && b >= 0x20 && b <= 0x2f;\n\t\tconst case2 = (a === 0x17 || a === 0x1f) && b >= 0x2d && b <= 0x2f;\n\t\tif (!(case1 || case2)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index: number;\n\t\tconst bkgData: Partial<PenStyles> = {};\n\t\tif (a === 0x10 || a === 0x18) {\n\t\t\tindex = Math.floor((b - 0x20) / 2);\n\t\t\tbkgData.background = backgroundColors[index];\n\t\t\tif (b % 2 === 1) {\n\t\t\t\tbkgData.background = bkgData.background + '_semi';\n\t\t\t}\n\t\t}\n\t\telse if (b === 0x2d) {\n\t\t\tbkgData.background = 'transparent';\n\t\t}\n\t\telse {\n\t\t\tbkgData.foreground = 'black';\n\t\t\tif (b === 0x2f) {\n\t\t\t\tbkgData.underline = true;\n\t\t\t}\n\t\t}\n\t\tconst chNr: Channels = a <= 0x17 ? 1 : 2;\n\t\tconst channel: Cta608Channel = this.channels[chNr] as Cta608Channel;\n\t\tchannel.setBkgData(bkgData);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Reset state of parser and its channels.\n\t */\n\treset(): void {\n\t\tfor (let i = 0; i < Object.keys(this.channels).length; i++) {\n\t\t\tconst channel = this.channels[i];\n\t\t\tif (channel) {\n\t\t\t\tchannel.reset();\n\t\t\t}\n\t\t}\n\t\tsetLastCmd(null, null, this.cmdHistory);\n\t}\n\n\t/**\n\t * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n\t */\n\tcueSplitAtTime(t: number): void {\n\t\tfor (let i = 0; i < this.channels.length; i++) {\n\t\t\tconst channel = this.channels[i];\n\t\t\tif (channel) {\n\t\t\t\tchannel.cueSplitAtTime(t);\n\t\t\t}\n\t\t}\n\t}\n}\n"]}