{"version":3,"file":"CaptionScreen.js","sourceRoot":"","sources":["../../../src/cta/608/CaptionScreen.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { CaptionsLogger } from './CaptionsLogger.js';\nimport type { PACData } from './PACData.js';\nimport type { PenStyles } from './PenStyles.js';\nimport { Row } from './Row.js';\nimport { NR_ROWS } from './utils/NR_ROWS.js';\nimport { VerboseLevel } from './VerboseLevel.js';\n\n/**\n * Keep a CTA-608 screen of 32x15 styled characters\n *\n * @group CTA-608\n * @beta\n */\nexport class CaptionScreen {\n\tprivate rows: Row[] = [];\n\tprivate currRow: number = NR_ROWS - 1;\n\tprivate nrRollUpRows: number | null = null;\n\tprivate lastOutputScreen: CaptionScreen | null = null;\n\tprivate logger: CaptionsLogger;\n\n\tconstructor(logger: CaptionsLogger = new CaptionsLogger()) {\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tthis.rows.push(new Row(logger));\n\t\t}\n\t\tthis.logger = logger;\n\t}\n\n\treset(): void {\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tthis.rows[i].clear();\n\t\t}\n\t\tthis.currRow = NR_ROWS - 1;\n\t}\n\n\tequals(other: CaptionScreen): boolean {\n\t\tlet equal = true;\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tif (!this.rows[i].equals(other.rows[i])) {\n\t\t\t\tequal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn equal;\n\t}\n\n\tcopy(other: CaptionScreen): void {\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tthis.rows[i].copy(other.rows[i]);\n\t\t}\n\t}\n\n\tisEmpty(): boolean {\n\t\tlet empty = true;\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tif (!this.rows[i].isEmpty()) {\n\t\t\t\tempty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn empty;\n\t}\n\n\tbackSpace(): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.backSpace();\n\t}\n\n\tclearToEndOfRow(): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.clearToEndOfRow();\n\t}\n\n\t/**\n\t * Insert a character (without styling) in the current row.\n\t */\n\tinsertChar(char: number): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.insertChar(char);\n\t}\n\n\tsetPen(styles: Partial<PenStyles>): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.setPenStyles(styles);\n\t}\n\n\tmoveCursor(relPos: number): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.moveCursor(relPos);\n\t}\n\n\tsetCursor(absPos: number): void {\n\t\tthis.logger.log(VerboseLevel.INFO, 'setCursor: ' + absPos);\n\t\tconst row = this.rows[this.currRow];\n\t\trow.setCursor(absPos);\n\t}\n\n\tsetPAC(pacData: PACData): void {\n\t\tthis.logger.log(\n\t\t\tVerboseLevel.INFO,\n\t\t\t() => 'pacData = ' + JSON.stringify(pacData),\n\t\t);\n\t\tlet newRow = pacData.row - 1;\n\t\tif (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {\n\t\t\tnewRow = this.nrRollUpRows - 1;\n\t\t}\n\n\t\t// Make sure this only affects Roll-up Captions by checking this.nrRollUpRows\n\t\tif (this.nrRollUpRows && this.currRow !== newRow) {\n\t\t\t// clear all rows first\n\t\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\t\tthis.rows[i].clear();\n\t\t\t}\n\n\t\t\t// Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location\n\t\t\t// topRowIndex - the start of rows to copy (inclusive index)\n\t\t\tconst topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n\t\t\t// We only copy if the last position was already shown.\n\t\t\t// We use the cueStartTime value to check this.\n\t\t\tconst lastOutputScreen = this.lastOutputScreen;\n\t\t\tif (lastOutputScreen) {\n\t\t\t\tconst prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;\n\t\t\t\tconst time = this.logger.time;\n\t\t\t\tif (prevLineTime !== null && time !== null && prevLineTime < time) {\n\t\t\t\t\tfor (let i = 0; i < this.nrRollUpRows; i++) {\n\t\t\t\t\t\tthis.rows[newRow - this.nrRollUpRows + i + 1].copy(\n\t\t\t\t\t\t\tlastOutputScreen.rows[topRowIndex + i],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currRow = newRow;\n\t\tconst row = this.rows[this.currRow];\n\t\tif (pacData.indent !== null) {\n\t\t\tconst indent = pacData.indent;\n\t\t\tconst prevPos = Math.max(indent - 1, 0);\n\t\t\trow.setCursor(pacData.indent);\n\t\t\tpacData.color = row.chars[prevPos].penState.foreground;\n\t\t}\n\t\tconst styles: PenStyles = {\n\t\t\tforeground: pacData.color,\n\t\t\tunderline: pacData.underline,\n\t\t\titalics: pacData.italics,\n\t\t\tbackground: 'black',\n\t\t\tflash: false,\n\t\t};\n\t\tthis.setPen(styles);\n\t}\n\n\t/**\n\t * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n\t */\n\tsetBkgData(bkgData: Partial<PenStyles>): void {\n\t\tthis.logger.log(\n\t\t\tVerboseLevel.INFO,\n\t\t\t() => 'bkgData = ' + JSON.stringify(bkgData),\n\t\t);\n\t\tthis.backSpace();\n\t\tthis.setPen(bkgData);\n\t\tthis.insertChar(0x20); // Space\n\t}\n\n\tsetRollUpRows(nrRows: number | null): void {\n\t\tthis.nrRollUpRows = nrRows;\n\t}\n\n\trollUp(): void {\n\t\tif (this.nrRollUpRows === null) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t'roll_up but nrRollUpRows not set yet',\n\t\t\t);\n\t\t\treturn; // Not properly setup\n\t\t}\n\t\tthis.logger.log(VerboseLevel.TEXT, () => this.getDisplayText());\n\t\tconst topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n\t\tconst topRow = this.rows.splice(topRowIndex, 1)[0];\n\t\ttopRow.clear();\n\t\tthis.rows.splice(this.currRow, 0, topRow);\n\t\tthis.logger.log(VerboseLevel.INFO, 'Rolling up');\n\t}\n\n\t/**\n\t * Get all non-empty rows with as unicode text.\n\t */\n\tgetDisplayText(asOneRow?: boolean): string {\n\t\tasOneRow = asOneRow || false;\n\t\tconst displayText: string[] = [];\n\t\tlet text = '';\n\t\tlet rowNr = -1;\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tconst rowText = this.rows[i].getTextString();\n\t\t\tif (rowText) {\n\t\t\t\trowNr = i + 1;\n\t\t\t\tif (asOneRow) {\n\t\t\t\t\tdisplayText.push('Row ' + rowNr + \": '\" + rowText + \"'\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplayText.push(rowText.trim());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (displayText.length > 0) {\n\t\t\tif (asOneRow) {\n\t\t\t\ttext = '[' + displayText.join(' | ') + ']';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = displayText.join('\\n');\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\tgetTextAndFormat(): Row[] {\n\t\treturn this.rows;\n\t}\n}\n"]}